{"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/free":{"title":"Free Assets","data":{"":"Here you can find documentation for our free assets!"}},"/faq":{"title":"Frequently Asked Questions","data":{"":"How do I get my roles on Discord?\nObtaining roles is very simple, on our community Discord we have a channel called  🔑︱claim-role , which allows you to claim roles using the Tebex bot.\nWhere should I look for support?\nAs a new customer with a Customer role, you'll find a dedicated section named 'Customer Area' on our Discord server.\nThe  🎫︱script-support  channel serves as the exclusive support hub for our resources,\nwhere customers should seek assistance. If you can't access the  🎫︱script-support  channel, please open a ticket in the\n 🎫︱general-support  channel and provide your transaction ID.\nI can't find my transaction id\nYou can find your transaction id at https://checkout.tebex.io/payment-history/login\nHow do I download and install the digital products I purchase?\nAfter purchase your product(s) will be available on your Keymaster account instantly!\nIs it possible to get a refund?\nA refund can only be processed if the conditions outlined in our refund policy are met. Please refer to our refund policy at: https://www.uniq-scripts.com/refund-policy.\nCan I transfer or give away my scripts?\nYes, from your keymaster account you have the option to transfer one time to another person. You also have the option to buy as a gift from our website!\nI would like to cancel my subscription\nYou can manage your subscription at https://checkout.tebex.io/payment-history/login\nWhen checking out, it says \"payment declined\"\nIf your payment got declined there is nothing we can do. It usually fixes itself if you try later, or it might mean you have been banned from Tebex. Try using another payment method, credit card or device.\nI have XAMPP, how can I install MariaDB?\nFollow this video for a guide on how to switch to MariaDB: https://www.youtube.com/watch?v=bigFDwM8YCA"}},"/":{"title":"Documentation for Uniq Scripts","data":{"":"Welcome to the documentation for Uniq Scripts. Here you can find information on how to install, configure, use and troubleshoot our resources.If you need help with any of our resources, you can ask in the\n 🎫︱script-support  channel in our Discord server.\n \n \nUse code \"UNIQ-WELCOME10\" during checkout and get 10% OFF on your first purchase."}},"/paid":{"title":"Paid Assets","data":{"":"Here you can find documentation for our paid assets!"}},"/paid/ads":{"title":"Ads","data":{}},"/paid/ads/accessiable":{"title":"Accessible code","data":{}},"/paid/ads/about":{"title":"About Asset","data":{}},"/paid/attendance/about":{"title":"About Asset","data":{}},"/paid/attendance":{"title":"Attendance","data":{}},"/paid/attendance/accessiable":{"title":"Accessible code","data":{}},"/paid/billing":{"title":"Billing","data":{}},"/paid/billing/about":{"title":"About Asset","data":{}},"/paid/billing/accessiable":{"title":"Accessible code","data":{}},"/paid/cartheft":{"title":"Cartheft","data":{}},"/paid/cartheft/about":{"title":"About Asset","data":{}},"/paid/cocainelabs":{"title":"Ownable Cocaine Labs","data":{"":"System that allows admins to create and players to buy and run their own cocaine labs."}},"/paid/cartheft/accessiable":{"title":"Accessible code","data":{}},"/paid/cocainelabs/about":{"title":"About Asset","data":{"compatible-frameworks#Compatible Frameworks:":"ESX\nQB Core\nQBOX"}},"/paid/cocainelabs/accessiable":{"title":"Accessible code","data":{"":"List of accesiable code for Ownable Cocaine Labs\nfunction progressBar(duration, label, animDict, animClip)\n    if lib.progressBar({\n        duration = duration,\n        label = label,\n        useWhileDead = false,\n        canCancel = true,\n        disable = {\n            car = true,\n            move = true,\n            combat = true,\n        },\n        anim = {\n            dict = animDict,\n            clip = animClip\n        },\n    }) then \n        return true\n    else\n        return false\n    end\nend\nNotification = function (title, description, type)\n    -- types are success and error\n    lib.notify({\n        title = title,\n        description = description,\n        type = type\n    })\nend\nfunction SkillCheck()\n    local success = lib.skillCheck({'easy', 'easy', {areaSize = 60, speedMultiplier = 2}, 'easy'}, {'w', 'a', 's', 'd'})\n    return success\nend\nfunction MiniGame()\n    local gameData = {\n        totalNumbers = 15,\n        seconds = 20,\n        timesToChangeNumbers = 4,\n        amountOfGames = 2,\n        incrementByAmount = 5,\n    }\n    local result = exports['pure-minigames']:numberCounter(gameData)\n    return result\nend\nNotification = function (source, title, description, type)\n    TriggerClientEvent('ox_lib:notify', source, {\n        title = title,\n        description = description,\n        type = type\n    })\nend\nConfig = {\n    locales = 'en',\n    versionChecking = false,\n        \n    textUIAlign = 'left-center',\n    menuUIAlign = 'top-right',\n    drawDistance = 25.0,\n    interactionDistance = 1.5,\n    suppliesForBlock = 250, -- amount of supplies for one block of cocaine\n    maxCocaineBlocks = 200, -- max capacity of cocaine block\n    timeForSupplies = 60, -- in minutes\n    cocaineBlockPrice = math.random(500, 1000),\n    changeNamePrice = 2500,\n    maxLabPerPlayer = 1,\n    commands = {\n        [1] = {\n            enable = true,\n            command = 'labs',\n            permission = 'user.admin',\n            help = 'Manage Cocaine Labs',\n        },\n    },\n    labPosition = {\n        exitCoords = vec4(1088.6670, -3187.6814, -38.9935, 173.8485),\n        laptopCoords = vec3(1087.1533, -3194.2832, -38.9934),\n        proccessCoords = vec4(1100.5909, -3198.8232, -38.9934, 176.3272),\n    },\n    cctvProp = 'prop_cctv_cam_01a',\n    animations = {\n        proccess = {\n            time = 15000,\n            anim = 'mini@repair',\n            dict = 'fixing_a_ped',\n        },\n        hacking = {\n            time = 10000,\n            anim = 'anim@heists@prison_heiststation@cop_reactions',\n            dict = 'cop_b_idle',\n        },\n    },\n    workerPeds = {\n        'mp_f_cocaine_01',\n        'mp_m_cocaine_01',\n    },\n    workersAnimation = {\n        dict = 'anim@amb@business@coc@coc_unpack_cut@',\n        anim = 'fullcut_cycle_v1_cokecutter'\n    },\n    securityPeds = {\n        's_m_m_highsec_01',\n        's_m_m_highsec_02',\n        's_m_m_movprem_01',\n        's_m_m_armoured_02',\n    },\n    securityAnimation = {\n        dict = 'missclothing',\n        anim = 'idle_storeclerk'\n    },\n    whitelistedJobs = {\n        'police'\n    },\n    upgrades = {\n        ['playerSlot'] = {\n            [1] = {\n                label = 'Player Slot 1',\n                players = 1,\n            },\n            [2] = {\n                label = 'Player Slot 2',\n                players = 2,\n                price = 1500,\n            },\n            [3] = {\n                label = 'Player Slot 3',\n                players = 3,\n                price = 3000,\n            },\n            [4] = {\n                label = 'Player Slot 5',\n                players = 5,\n                price = 5000,\n            },\n            [5] = {\n                label = 'Player Slot 10',\n                players = 10,\n                price = 7500,\n            },\n        },\n        ['workers'] = {\n            [1] = {\n                label = 'Workers Level 1',\n                coords = vec4(1090.3329, -3194.9297, -38.9934, 173.8444),\n                amount = { min = 50, max = 100 },\n            },\n            [2] = {\n                label = 'Workers Level 2',\n                coords = vec4(1090.2860, -3196.5632, -38.9934, 1.7713),\n                price = 500,\n                amount = { min = 100, max = 150 },\n            },\n            [3] = {\n                label = 'Workers Level 3',\n                coords = vec4(1093.0297, -3194.9309, -38.9934, 173.1970),\n                price = 1000,\n                amount = { min = 150, max = 200 },\n            },\n            [4] = {\n                label = 'Workers Level 4',\n                coords = vec4(1092.9294, -3196.5701, -38.9934, 355.2273),\n                price = 1500,\n                amount = { min = 200, max = 250 },\n            },\n            [5] = {\n                label = 'Workers Level 5',\n                coords = vec4(1095.4424, -3194.9021, -38.9934, 178.7726),\n                price = 2000,\n                amount = { min = 300, max = 350 },\n            },\n            [6] = {\n                label = 'Workers Level 6',\n                coords = vec4(1095.3395, -3196.5598, -38.9934, 350.8661),\n                price = 2500,\n                amount = { min = 400, max = 450 },\n            },\n            [7] = {\n                label = 'Workers Level 7',\n                coords = vec4(1099.6055, -3194.2439, -38.9934, 87.8458),\n                price = 3000,\n                amount = { min = 500, max = 550 },\n            },\n            [8] = {\n                label = 'Workers Level 8',\n                coords = vec4(1101.8270, -3193.6729, -38.9934, 358.8464),\n                price = 3500,\n                amount = { min = 600, max = 650 },\n            },\n        },\n        ['security'] = {\n            [1] = {\n                label = 'Guards Level 1',\n                coords = vec4(1090.4120, -3190.9260, -38.9935, 35.5183),\n            },\n            [2] = {\n                label = 'Guards Level 2',\n                coords = vec4(1087.3292, -3190.8938, -38.9935, 330.6691),\n                price = 1000,\n            },\n            [3] = {\n                label = 'Guards Level 3',\n                coords = vec4(1087.5425, -3199.5457, -38.9918, 341.0070),\n                price = 2000,\n            },\n        },\n        ['securityWeapon'] = {\n            [1] = {\n                label = 'Pistol',\n                weapon = 'weapon_pistol',\n            },\n            [2] = {\n                label = 'Carbine Rifle',\n                weapon = 'weapon_carbinerifle',\n                price = 5000,\n            },\n            [3] = {\n                label = 'Special Carbine',\n                weapon = 'weapon_specialcarbine',\n                price = 7500,\n            },\n        },\n        ['stock'] = {\n            [1] = {\n                label = 'Stock Level 1',\n                stock = 250,\n            },\n            [2] = {\n                label = 'Stock Level 2',\n                stock = 500,\n                price = 1000,\n            },\n            [3] = {\n                label = 'Stock Level 2',\n                stock = 1500,\n                price = 3000,\n            },\n            [4] = {\n                label = 'Stock Level 4',\n                stock = 2500,\n                price = 5000,\n            },\n            [5] = {\n                label = 'Stock Level 5',\n                stock = 5000,\n                price = 10000,\n            },\n        },\n    }\n}\nTranslate['en'] = {\n    menu = {\n        admin_menu = 'Labs Admin Menu',\n        edit_labs = 'Edit Labs',\n        refresh_data = 'Refresh Data',\n    },\n    context = {\n        create_lab = 'Create Lab',\n        lab_name = 'Lab Name',\n        lab_price = 'Price',\n        player_workers_level = 'Player Workers Level',\n        workers_level = 'Workers Level',\n        security_level = 'Security Level',\n        security_level_desc = 'Improve the security system on your laptop \\nCurrent Level is: %s',\n        security_weapon_Level = 'Security Weapon Level',\n        security_weapon_Level_desc = 'Upgrade weapons for your security in the lab \\nCurrent Level is: %s',\n        stock_level = 'Stock Level',\n        select_owner = 'Select Owner',\n        enable_blip = 'Enable Blip',\n        enable_blip_desc = 'Turn on the blip on the maps',\n        disable_blip = 'Disable Blip',\n        disable_blip_desc = 'Turn off the blip from the map',\n        change_name = 'Change Name',\n        change_name_desc = 'Change the name of this lab',\n        change_name_price = 'Change the name of this cocaine lab for $%s',\n        enter_new_name = 'New Name',\n        manage_blip = 'Manage Blip',\n        manage_blip_desc = 'I\\'m editing a blip on the map of this lab',\n        change_price = 'Change Price',\n        change_price_desc = 'Change the purchase price of this lab',\n        select_level = 'Select Level',\n        change_coords = 'Change Entrance Coords',\n        change_coords_desc = 'Change the coordinates of the entrance of the lab',\n        move_camera = 'Move Camera',\n        move_camera_desc = 'Move the CCTV camera to another position',\n        manage_slots = 'Manage Slots',\n        manage_slots_desc = 'Change level of player slots',\n        manage_security = 'Manage Security',\n        manage_security_desc = 'Change lab security level',\n        manage_security_weapon = 'Manage Security Weapon',\n        manage_security_weapon_desc = 'Change lab security weapon level',\n        manage_workers = 'Manage Workers',\n        manage_workers_desc = 'Change lab workers level',\n        manage_supplies = 'Manage Supplies',\n        manage_supplies_desc = 'Change lab supplies level',\n        manage_ownership = 'Manage Ownership',\n        manage_ownership_desc = 'Change or remove the owner of the lab',\n        manage_access = 'Manage Access',\n        manage_access_desc = 'Change access to players in the lab',\n        manage_access_desc_2 = 'Add or remove a player from the whitelist',\n        delete_lab = 'Delete Lab',\n        delete_lab_desC = 'Delete cocaine lab from the database',\n        edit_lab = 'Edit this lab',\n        labs_list = 'Labs List',\n        laptop = 'Laptop',\n        sell_blocks = 'Sell Cocaine Blocks',\n        sell_blocks_amount = 'Sell cocaine blocks \\nYou currently have %s/%s blocks',\n        supplies = 'Supplies',\n        supplies_desc = 'Supplies are used to make blocks of cocaine \\nYou currently have %s/%s supplies',\n        cctv_camera = 'CCTV Camera',\n        cctv_camera_desc = 'Check the camera at the lab entrance',\n        player_slots = 'Player Slots',\n        player_slots_desc = 'Increase the amount of players that can work for you \\nCurrent Level is: %s',\n        upgrade_level = 'Upgrade Level',\n        upgrade_level_desc = 'Advance the level and achieve greater player capacity \\n Current players: %s/%s',\n        select_player = 'Select Player',\n        workers_level = 'Workers Level',\n        workers_level_desc = 'Advance the number of workers for your lab \\nCurrent Level is: %s',\n        supplies_level = 'Supplies Level',\n        supplies_level_desc = 'Upgrade supplies stock for your lab \\nCurrent Level is: %s',\n        sell_lab = 'Sell Lab',\n        sell_lab_desc = 'Sell the lab for $%s',\n    },\n    input = {\n        blip_settings = 'Blip Settings',\n        blip_id = 'Blip ID',\n        blip_color = 'Blip Color',\n        blip_scale = 'Blip Scale',\n        blip_display = 'Blip Display',\n        by_online = 'By Online',\n        by_offline = 'By Offline',\n        remove_ownership = 'Remove Ownership',\n        select_action = 'Select Action',\n        manage_ownership_online = 'Manage Ownership (Online)',\n        manage_ownership_offline = 'Manage Ownership (Offline)',\n        select_new_owner = 'Select New Owner',\n        input_identifier = 'Input Identifier',\n        change_block_amount = 'Change Cocaine Blocks Amount',\n        change_block_amount_desc = 'Change amount of cocaine blocks',\n        select_amount = 'Select Amount',\n        change_supplies_amount = 'Change Supplies Amount',\n        change_supplies_amount_desc = 'Change amount of lab supplies',\n        delete_labs = 'Delete Lab(s)',\n        delete_labs_desc = 'Select Lab(s)',\n    },\n    alert = {\n        confirmation = 'Confirmation',\n        turn_off_blip = 'Are you sure you want to turn off the blip?',\n        remove_owner = 'Are you sure you want to remove the owner of this lab?',\n        delete_lab = 'Are you sure you want to delete the cocaine lab **%s**',\n        confirm_sell = 'Are you sure you want to sell **%sx** blocks of coke for $%s',\n        buy_slots = 'Are you sure you want to buy Player Slots Level %s? \\nPrice **$%s**',\n        buy_workers_level = 'Are you sure you want to buy Workers Level %s? \\nPrice **$%s**',\n        buy_security_level = 'Are you sure you want to buy Security Level %s? \\nPrice **$%s**',\n        buy_sec_level_weapon = 'Are you sure you want to buy Security Weapon Level %s? \\nPrice **$%s**',\n        buy_supplies_level = 'Are you sure you want to buy Supplies Level %s? \\nPrice **$%s**',\n        sell_lab = 'Are you sure you want to sell cocaine lab.  \\nIf you sell this lab everything goes back to default settings.  \\nPrice: **$%s**',\n        buy_lab = 'Are you sure you want to buy cocaine lab **$%s**?  \\nPrice: **$%s**',\n    },\n    text_ui = {\n        enter_location = {\n            ('ENTER - Place enter location  \\n'),\n            ('BACKSPACE - Cancel'),\n        },\n        move = {\n            ('↑ & ↓ - Move Forward or Back  \\n'),\n            ('← & → - Move Right & Left  \\n'),\n            ('Q & Z - Move Up or Down  \\n'),\n            ('[ & ] - Rotate Right & Left  \\n'),\n            ('ENTER - Finish  \\n'),\n            ('BACKSPACE - Cancel'),\n        },\n        move_2 = {\n            ('ARROW UP - Move camera up  \\n'),\n            ('ARROW DOWN - Move camera down  \\n'),\n            ('ARROW LEFT - Move camera left  \\n'),\n            ('ARROW RIGHT - Move camera right  \\n'),\n            ('SCROLL UP - Zoom in  \\n'),\n            ('SCROLL DOWN - Zoom out  \\n'),\n            ('BACKSPACE - Close'),\n        },\n        lab_menu = 'Lab Menu',\n        raid_lab = 'Raid Lab',\n        exit_lab = 'Exit Lab',\n        access_laptop = 'Access Laptop',\n        hack_laptop = 'Hack Laptop',\n        process_supplies = 'Process Supplies'\n    },\n    notify = {\n        failed_hack = 'You failed to hack the laptop',\n        not_enough_supplies = 'You don\\'t have enough supplies',\n        failed_lockpick = 'You failed lockpicking the cocaine lab lock',\n        created_lab = 'You have successfully created a lab named %s',\n        name_taken = 'Lab name already taken',\n        purchased_lab = 'You have successfully purchased cocaine lab %s for $%s',\n        not_enough_money = 'You don\\'t have enough money',\n        exceeded_limit = 'You cannot buy a lab because you have exceeded the limit of %s',\n        sold_cocaine_lab = 'You have successfully sold cocaine lab %s for $%s', \n        security_weapon_Level_bought = 'You have successfully purchased Security Weapon Level %s for $%s',\n        security_Level_bought = 'You have successfully purchased Security Level %s for $%s',\n        workers_Level_bought = 'You have successfully purchased Workers Level %s for $%s',\n        pslots_Level_bought = 'You have successfully purchased Player Slots Level %s for $%s',\n        supplies_Level_bought = 'You have successfully purchased Supplies Level %s for $%s',\n        changed_access_list = 'You have successfully updated players access list',\n        lab_name_change = 'You have successfully changed lab name to %s',\n        crafted_cocaine = 'You have successfully crafted 1 cocaine block',\n        sold_blocks = 'You have successfully sold %sx blocks of cocaine for $%s',\n        not_enough_blocks = 'You don\\'t have enough blocks of cocaine to sell',\n        preparing_data_refresh = 'Preparing for a data refresh',\n        data_refreshed = 'Data refresh completed successfully',\n        labs_deleted = 'You have successfully deleted the lab(s) you selected',\n        deleted_lab = 'You have successfully deleted the lab %s',\n        changed_block_amount = 'You have successfully changed the amount of cocaine blocks to %s',\n        changed_supplies_amount = 'You have successfully changed the amount of supplies to %s',\n        changed_owner = 'You have successfully changed lab\\'s owner',\n        changed_supplies_level = 'You have successfully changed supplies level to %s',\n        changed_workers_level = 'You have successfully changed workers level to %s',\n        changed_seC_wea_level = 'You have successfully changed security weapon level to %s',\n        changed_seC_level = 'You have successfully changed security level to %s',\n        changed_pslots_level = 'You have successfully changed player slots level to %s',\n        changed_camera_pos = 'You have successfully changed camera position',\n        changed_entrance_point = 'You have successfully changed lab\\'s entrance point',\n        changed_lab_price = 'You have successfully changed lab price to $%s',\n        managed_blip = 'You have successfully configured lab\\'s blip',\n        disable_blip = 'You have successfully disabled lab\\'s blip',\n        enable_blip = 'You have successfully enabled lab\\'s blip',\n        success_raid = 'You have successfully raided lab %s and stole %sx blocks of cocaine and %sx supplies',\n    },\n    progress = {\n        proccessing_block = 'Proccessing Cocaine Block',\n        hacking_laptop = 'Hacking Laptop',\n    }\n}\n    if not IsQBCore() then return end\n    local QBCore = exports['qb-core']:GetCoreObject()\n    AddEventHandler('QBCore:Client:OnPlayerLoaded', function()\n        PlayerData = QBCore.Functions.GetPlayerData()\n        PlayerLoaded = true\n        SetUpLabs()\n    end)\n    RegisterNetEvent('QBCore:Client:OnPlayerUnload', function()\n        table.wipe(PlayerData)\n        PlayerLoaded = false\n    end)\n    RegisterNetEvent('QBCore:Player:SetPlayerData', function(val)\n        PlayerData = val\n    end)\n    AddEventHandler('onResourceStart', function(resource)\n        if cache.resource == resource then\n            Wait(1500)\n            PlayerData = QBCore.Functions.GetPlayerData()\n            PlayerLoaded = true\n            SetUpLabs()\n        end\n    end)\n    function GetIdentifier()\n        return PlayerData.citizenid\n    end\n    function GetJob()\n        return PlayerData.job.name\n    end\nif not IsQBCore() then return end\nlocal QBCore = exports['qb-core']:GetCoreObject()\nfunction GetPlayerBySource(source)\n    return QBCore.Functions.GetPlayer(source)\nend\nfunction GetPlayerSource(Player)\n    return Player.PlayerData.source\nend\nfunction GetPlayerByIdentifier(id)\n    return QBCore.Functions.GetPlayerByCitizenId(id)\nend\nfunction GetAllPlayers()\n    return QBCore.Functions.GetQBPlayers()\nend\nfunction GetPlayerCharName(Player)\n    return Player.PlayerData.charinfo.firstname .. ' ' .. Player.PlayerData.charinfo.lastname\nend\nfunction GetIdentifierByPlayerData(Player)\n    return Player.PlayerData.citizenid    \nend\nfunction GetMoney(Player)\n    return Player.Functions.GetMoney('cash')\nend\nfunction AddMoney(Player, amount)\n    return Player.Functions.AddMoney('cash', amount)\nend\nfunction RemoveMoney(Player, amount)\n    return Player.Functions.RemoveMoney('cash', amount)\nend\nif not IsESX() then return end\nlocal ESX = exports['es_extended']:getSharedObject()\nRegisterNetEvent('esx:playerLoaded')\nAddEventHandler('esx:playerLoaded', function(xPlayer)\n    PlayerData = xPlayer\n    PlayerLoaded = true\n    SetUpLabs()\nend)\nRegisterNetEvent('esx:onPlayerLogout', function()\n    table.wipe(PlayerData)\n    PlayerLoaded = false\nend)\nRegisterNetEvent('esx:setJob')\nAddEventHandler('esx:setJob', function(job)\n    PlayerData.job = job\nend)\nAddEventHandler('onResourceStart', function(resource)\n    if cache.resource == resource then\n        Wait(1500)\n        PlayerData = ESX.GetPlayerData()\n        PlayerLoaded = true\n        SetUpLabs()\n    end\nend)\nfunction GetIdentifier()\n    return PlayerData.identifier\nend\nfunction GetJob()\n    return PlayerData.job.name\nend\nif not IsESX() then return end\nlocal ESX = exports['es_extended']:getSharedObject()\nfunction GetPlayerBySource(source)\n    return ESX.GetPlayerFromId(source)\nend\nfunction GetPlayerSource(Player)\n    return Player.source\nend\nfunction GetPlayerByIdentifier(id)\n    return ESX.GetPlayerFromIdentifier(id)\nend\nfunction GetAllPlayers()\n    return ESX.GetExtendedPlayers()\nend\nfunction GetPlayerCharName(Player)\n    return Player.name\nend\nfunction GetIdentifierByPlayerData(Player)\n    return Player.identifier\nend\nfunction GetMoney(Player)\n    return Player.getMoney()\nend\nfunction AddMoney(Player, amount)\n    return Player.addMoney(amount)\nend\nfunction RemoveMoney(Player, amount)\n    return Player.removeMoney(amount)\nend"}},"/paid/craftingtables/about":{"title":"About Asset","data":{}},"/paid/craftingtables":{"title":"Ownable Crafting Tables","data":{"":"System which will allow players to place their own crafting tables on allowed locations on server and use them, and much more."}},"/paid/craftingtables/install":{"title":"Installation","data":{}},"/paid/craftingtables/accessiable":{"title":"Accessible code","data":{}},"/paid/crypto":{"title":"Crypto","data":{}},"/paid/crypto/about":{"title":"About Asset","data":{}},"/paid/crypto/accessiable":{"title":"Accessible code","data":{}},"/paid/darknet":{"title":"Darknet","data":{}},"/paid/darknet/about":{"title":"About Asset","data":{}},"/paid/darknet/accessiable":{"title":"Accessible code","data":{}},"/paid/deathmatch":{"title":"Deathmatch System","data":{"":"System that allows your players to test shooting skills against each other."}},"/paid/deathmatch/about":{"title":"About Asset","data":{"compatible-frameworks#Compatible Frameworks:":"ESX\nQB Core\nQBOX","compatible-inventories#Compatible Inventories:":"ox_inventory\nqs-inventory\nqb-inventory\nps-inventory\nlj-inventory\ncodem-inventory\ncore_inventory","compatible-ambulance-assets#Compatible Ambulance Assets:":"esx_ambulancejob\nqb-ambualncejob\nwasabi_ambulance\nqbx_medical\nIn case your inventory or ambulance job isn't on list, check this"}},"/paid/deathmatch/accessiable":{"title":"Accessible code","data":{"":"List of accesiable code for Deathmatch System\n-- If you don't have fucking idea what are you doing don't touch this :)))\nFramework, Inv = {}, {}\nlocal esx = GetResourceState('es_extended'):find('start')\nlocal qb = GetResourceState('qb-core'):find('start')\nif esx then\n    Framework = { esx = true }\nelseif qb then\n    Framework = { qb = true }\nend\nlocal oxinv = GetResourceState('ox_inventory'):find('start')\nlocal qsinv = GetResourceState('qs-inventory'):find('start')\nlocal qbinv = GetResourceState('qb-inventory'):find('start')\nlocal psinv = GetResourceState('ps-inventory'):find('start')\nlocal ljinv = GetResourceState('lj-inventory'):find('start')\nlocal core = GetResourceState('core_inventory'):find('start')\nlocal codem = GetResourceState('codem-inventory'):find('start')\nif oxinv then\n    Inv = { ox = true }\nelseif qsinv then\n    Inv = { qs = true }\nelseif qbinv or psinv or ljinv then\n    Inv = { qb = true }\nelseif core then\n    Inv = { core = true }\nelseif codem then\n    Inv = { codem = true }\nend\nSetTimeout(1000, function()\n    if table.type(Framework) == 'empty' then\n        for i = 1, 3 do\n            warn(\"No Framework was found, check uniq_deathmatch/setup.lua\")\n        end\n    end\nend)\nfunction Notify(msg, type)\n    lib.notify({\n        description = msg,\n        type = type,\n        position = 'bottom'\n    })\nend\nRegisterNetEvent('uniq_deathmatch:Notify', Notify)\nfunction LockInventory(bool) end\nif Inv.ox then\n    function LockInventory(bool)\n        if bool then\n            TriggerEvent('ox_inventory:disarm', true)\n        end\n        exports.ox_inventory:weaponWheel(bool)\n        LocalPlayer.state.invBusy = bool\n        -- you can also add here healing for wounds etc\n    end\nelseif Inv.qb then\n    function LockInventory(bool)\n        LocalPlayer.state.inv_busy = bool\n        -- you can also add here healing for wounds etc\n    end\nelseif Inv.qs then\n    function LockInventory(bool)\n        exports['qs-inventory']:setInventoryDisabled(bool)\n        -- you can also add here healing for wounds etc\n    end\nend\nfunction HasPermission(playerId)\n    if IsPlayerAceAllowed(playerId, 'command') then return true end\n    return false\nend\nfunction GiveItem(playerId, item, count) end\nif Inv.ox then\n    function GiveItem(playerId, item, count)\n        exports.ox_inventory:AddItem(playerId, item, count)\n    end\nelseif Inv.qb then\n    function GiveItem(playerId, item, count)\n        exports['qb-inventory']:AddItem(playerId, item, count)\n    end\nelseif Inv.qs then\n    function GiveItem(playerId, item, count)\n        exports['qs-inventory']:AddItem(playerId, item, count)\n    end\nend\n-- if you wnat to use rp name in scoreboard you can edit that her \nfunction PlayerName(playerId)\n    return GetPlayerName(playerId)\nend\nConfig = {\n    Locale = 'en',\n    DebugMenu = true,\n    -- make players invisible until deathmatch starts (when player joins deathmatch he becomes invisible so other people dont know each others position)\n    -- if your anticheat starts banning people for invisibility turn this off\n    Invisible = true,\n    Commands = {\n        start = {\n            name = 'startdm',\n            help = 'Command that start deathmatch',\n            restricted = 'group.admin'\n        },\n        join = {\n            name = 'joindm',\n            help = 'Command that allows you to join deathmatch event'\n        },\n        leave = {\n            name = 'leavedm',\n            help = 'Command that allows you to leave deathmatch event'\n        },\n        cancel = {\n            name = 'canceldm',\n            help = 'Command that cancels current deathmatch event',\n            restricted = 'group.admin'\n        },\n        leaderboard = {\n            name = 'eventleaderboard',\n            help = 'Command that shows leaderboard of current event'\n        }\n    },\n    Locations = {\n        ['Refinery'] = {\n            -- slots depends on spawn points, we dont want 2 people to be spawned in same spot\n            vec3(2735.483, 1468.840, 50.326),\n            vec3(2744.339, 1501.095, 50.327),\n            vec3(2732.370, 1529.952, 50.687),\n            vec3(2736.068, 1544.658, 50.687),\n            vec3(2742.047, 1567.813, 50.687),\n            vec3(2755.911, 1578.350, 50.687),\n            vec3(2774.037, 1678.900, 41.523),\n            vec3(2738.927, 1671.258, 41.524),\n            vec3(2697.384, 1672.750, 41.523),\n        },\n    },\n    Weapons = {\n        [`WEAPON_TECPISTOL`] = 'Tactical SMG',\n        [`WEAPON_ADVANCEDRIFLE`] = 'Advanced Rifle',\n        [`WEAPON_APPISTOL`] = 'AP Pistol',\n        [`WEAPON_ASSAULTRIFLE`] = 'Assault Rifle',\n        [`WEAPON_ASSAULTRIFLE_MK2`] = 'Assault Rifle MK2',\n        [`WEAPON_ASSAULTSHOTGUN`] = 'Assault Shotgun',\n        [`WEAPON_ASSAULTSMG`] = 'Assault SMG',\n        [`WEAPON_BULLPUPRIFLE`] = 'Bullpup Rifle',\n        [`WEAPON_BULLPUPRIFLE_MK2`] = 'Bullpup Rifle MK2',\n        [`WEAPON_BULLPUPSHOTGUN`] = 'Bullpup Shotgun',\n        [`WEAPON_CARBINERIFLE`] = 'Carbine Rifle',\n        [`WEAPON_CARBINERIFLE_MK2`] = 'Carbine Rifle MK2',\n        [`WEAPON_CERAMICPISTOL`] = 'Ceramic Pistol',\n        [`WEAPON_PISTOLXM3`] = 'WM 29 Pistol',\n        [`WEAPON_COMBATMG`] = 'Combat MG',\n        [`WEAPON_COMBATMG_MK2`] = 'Combat MG MK2',\n        [`WEAPON_COMBATPDW`] = 'Combat PDW',\n        [`WEAPON_COMBATPISTOL`] = 'Combat Pistol',\n        [`WEAPON_COMBATSHOTGUN`] = 'Combat Shotgun',\n        [`WEAPON_COMPACTLAUNCHER`] = 'Compact Grenade Launcher',\n        [`WEAPON_COMPACTRIFLE`] = 'Compact Rifle',\n        [`WEAPON_DBSHOTGUN`] = 'Double Barrel Shotgun',\n        [`WEAPON_DOUBLEACTION`] = 'Double Action Revolver',\n        [`WEAPON_EMPLAUNCHER`] = 'Compact EMP Launcher',\n        [`WEAPON_FIREEXTINGUISHER`] = 'Fire Extinguisher',\n        [`WEAPON_FIREWORK`] = 'Firework Launcher',\n        [`WEAPON_GUSENBERG`] = 'Gusenberg',\n        [`WEAPON_HEAVYRIFLE`] = 'Heavy Rifle',\n        [`WEAPON_HAZARDCAN`] = 'Hazard Can',\n        [`WEAPON_METALDETECTOR`] = 'Metal Detector',\n        [`WEAPON_HOMINGLAUNCHER`] = 'Homing Launcher',\n        [`WEAPON_HEAVYPISTOL`] = 'Heavy Pistol',\n        [`WEAPON_HEAVYSHOTGUN`] = 'Heavy Shotgun',\n        [`WEAPON_HEAVYSNIPER`] = 'Heavy Sniper',\n        [`WEAPON_HEAVYSNIPER_MK2`] = 'Heavy Sniper MK2',\n        [`WEAPON_KNIFE`] = 'Knife',\n        [`WEAPON_KNUCKLE`] = 'Knuckle Dusters',\n        [`WEAPON_MACHETE`] = 'Machete',\n        [`WEAPON_MACHINEPISTOL`] = 'Machine Pistol',\n        [`WEAPON_MARKSMANPISTOL`] = 'Marksman Pistol',\n        [`WEAPON_MARKSMANRIFLE`] = 'Marksman Rifle',\n        [`WEAPON_MARKSMANRIFLE_MK2`] = 'Marksman Rifle MK2',\n        [`WEAPON_MG`] = 'Machine Gun',\n        [`WEAPON_MINIGUN`] = 'Minigun',\n        [`WEAPON_MICROSMG`] = 'Micro SMG',\n        [`WEAPON_MILITARYRIFLE`] = 'Military Rifle',\n        [`WEAPON_MINISMG`] = 'Mini SMG',\n        [`WEAPON_MOLOTOV`] = 'Molotov',\n        [`WEAPON_MUSKET`] = 'Musket',\n        [`WEAPON_NAVYREVOLVER`] = 'Navy Revolver',\n        [`WEAPON_NIGHTSTICK`] = 'Nightstick',\n        [`WEAPON_GADGETPISTOL`] = 'Perico Pistol',\n        [`WEAPON_PISTOL`] = 'Pistol',\n        [`WEAPON_PISTOL50`] = 'Pistol .50',\n        [`WEAPON_PISTOL_MK2`] = 'Pistol MK2',\n        [`WEAPON_POOLCUE`] = 'Pool Cue',\n        [`WEAPON_PUMPSHOTGUN`] = 'Pump Shotgun',\n        [`WEAPON_PUMPSHOTGUN_MK2`] = 'Pump Shotgun MK2',\n        [`WEAPON_RAILGUN`] = 'Railgun',\n        [`WEAPON_RAILGUNXM3`] = 'Railgun XM3',\n        [`WEAPON_RAYCARBINE`] = 'Unholy Hellbringer',\n        [`WEAPON_RAYPISTOL`] = 'Up-n-Atomizer',\n        [`WEAPON_REVOLVER`] = 'Revolver',\n        [`WEAPON_REVOLVER_MK2`] = 'Revolver MK2',\n        [`WEAPON_SAWNOFFSHOTGUN`] = 'Sawn Off Shotgun',\n        [`WEAPON_SMG`] = 'SMG',\n        [`WEAPON_SMG_MK2`] = 'SMG Mk2',\n        [`WEAPON_SMOKEGRENADE`] = 'Smoke Grenade',\n        [`WEAPON_SNIPERRIFLE`] = 'Sniper Rifle',\n        [`WEAPON_SNOWBALL`] = 'Snow Ball',\n        [`WEAPON_SNSPISTOL`] = 'SNS Pistol',\n        [`WEAPON_SNSPISTOL_MK2`] = 'SNS Pistol MK2',\n        [`WEAPON_SPECIALCARBINE`] = 'Special Carbine',\n        [`WEAPON_SPECIALCARBINE_MK2`] = 'Special Carbine MK2',\n        [`WEAPON_STONE_HATCHET`] = 'Stone Hatchet',\n        [`WEAPON_AUTOSHOTGUN`] = 'Sweeper Shotgun',\n        [`WEAPON_VINTAGEPISTOL`] = 'Vintage Pistol',\n        [`WEAPON_RAYMINIGUN`] = 'Widowmaker',\n        [`WEAPON_PRECISIONRIFLE`] = 'Precision Rifle',\n        [`WEAPON_TACTICALRIFLE`] = 'Tactical Rifle',\n    }\n}\nLocales['en'] = {\n    AdminInput = {\n        title = 'Start Event',\n        select_loc = 'Select Location',\n        item_name = 'Item Name',\n        item_name_desc = 'Item that will be reward',\n        duration = 'Event Duration (in min)',\n        first = '1st place reward',\n        second = '2nd place reward',\n        third = '3rd place reward',\n        application_dur = 'Application duration',\n        weapon = 'Select Weapon',\n        countdown = 'Countdown Time (in sec)'\n    },\n    Stats = {\n        ('Your Kills: %s  \\n'),\n        ('Your Deaths: %s  \\n'),\n        ('Time Left: %02d:%02d'),\n        ('  \\n'),\n        ('1st: %s  \\n'),\n        ('2nd: %s  \\n'),\n        ('3rd: %s'),\n    },\n    EventNotify = {\n        ('Deathmatch event is live!  \\n'),\n        ('Location: %s  \\n'),\n        ('Weapon: %s  \\n'),\n        ('/joindm - to join  \\n'),\n        ('/leavedm - to leave deatmatch event  \\n'),\n        ('Players: %s/%s  \\n'),\n        ('Application expires in: %s sec  \\n'),\n    },\n    Notify = {\n        reward = 'You got $%s for ending on %s. place in deatmatch event',\n        no_players = 'There is not enough people to start event',\n        already_running = 'There is already deatmatch running',\n        no_dm = 'There is no deatmatch event running at moment',\n        already_joined = 'You already joined event',\n        max = 'The maximum allowed number of participants joined the event',\n        expired = 'Application has expired',\n        joined = 'You joined event',\n        no_joined = 'You didnt join event',\n        cant_leave = 'You cant leave anymore',\n        you_left = 'You left event',\n        cancled = 'Event was cancled by admin'\n    },\n    kills = 'Kills: %s',\n    kills2 = '%s (Kills: %s)',\n    Logs = {\n        start = {\n            a = 'Event Started',\n            b = '`%s` has started deathmatch event!\\nLocation: `%s`\\nWeapon: `%s`'\n        },\n        finish = {\n            a = 'Event Finished',\n            b = '`%s.` | %s | Kills: `%s`\\n'\n        },\n        cancled = {\n            a = 'Event Cancled',\n            b = 'Event was cancled - not enough players'\n        },\n        unauthorized = {\n            a = 'Unauthorized event execution',\n            b = '%s has tried to execute `uniq_deathmatch:server:Start` without permission'\n        }\n    }\n}"}},"/paid/deathmatch/integration":{"title":"Integration for other inventories & ambulance scripts","data":{"":"To make this asset fully functional, we need to modify both the inventory and the ambulance job scripts. While a player is in deathmatch mode, they should not have the ability to open their inventory or use items (especially weapons).For the ambulance job, you'll need to prevent the execution of the player's death event, as reviving is handled by our asset. Relying on the ambulance function for such dynamic scenarios is too slow.To prevent inventory access, item usage, and the revive event during deathmatch, add the following code to your assets:","client#Client":"if LocalPlayer.state.inDeathmatch == true then return end","server#Server":"if Player(source).state.inDeathmatch == true then return end"}},"/paid/dispatch":{"title":"Dispatch","data":{}},"/paid/dispatch/accessiable":{"title":"Accessible code","data":{}},"/paid/electrician/about":{"title":"About Asset","data":{}},"/paid/dispatch/about":{"title":"About Asset","data":{}},"/paid/electrician":{"title":"Electrician","data":{}},"/paid/electrician/accessiable":{"title":"Accessible code","data":{}},"/paid/elevator":{"title":"Elevator","data":{}},"/paid/elevator/accessiable":{"title":"Accessible code","data":{}},"/paid/elevator/about":{"title":"About Asset","data":{}},"/paid/evidence":{"title":"Evidence System","data":{"":"System that allows your players to test shooting skills against each other."}},"/paid/evidence/about":{"title":"About Asset","data":{"compatible-frameworks#Compatible Frameworks:":"ESX\nQB Core\nQBOX","compatible-inventories#Compatible Inventories:":"ox_inventory\nqs-inventory\nqb-inventory\nps-inventory\nlj-inventory\ncodem-inventory\ncore_inventory\nYou can add your own inventory if it supports metadata on items."}},"/paid/evidence/api":{"title":"Client","data":{"opencasebyid#OpenCaseByID":"Allowing you to open case via ID in external resources (e.g. MDT).\nexports.uniq_evidence:OpenCaseByID('caseID')"}},"/paid/evidence/accessiable":{"title":"Accessible code","data":{"":"if not IsESX() then return end\nlocal ESX = exports[Config.FrameworkName]:getSharedObject()\nRegisterNetEvent(Config.PlayerLoadedEvent.esx)\nAddEventHandler(Config.PlayerLoadedEvent.esx, function(xPlayer)\n    PlayerData = xPlayer\n    PlayerLoaded = true\n    Wait(1000)\n    LoadEvidence()\nend)\nRegisterNetEvent('esx:setJob')\nAddEventHandler('esx:setJob', function(job)\n    PlayerData.job = job\n    lib.hideTextUI()\nend)\nRegisterNetEvent('esx:onPlayerLogout', function()\n    table.wipe(PlayerData)\n    PlayerLoaded = false\n    RemoveEverything()\nend)\nfunction GetJob()\n    return PlayerData.job.name or ''\nend\nfunction GetGrade()\n    return PlayerData.job.grade or 0\nend\nfunction GetIdentifier()\n    return PlayerData.identifier\nend\nfunction GetRPName()\n    return ('%s %s'):format(PlayerData.firstName, PlayerData.lastName)\nend\nAddEventHandler('onResourceStart', function(resource)\n    if cache.resource == resource then\n        Wait(750)\n        PlayerData = ESX.GetPlayerData()\n        PlayerLoaded = true\n    end\nend)\nif not IsESX() then return end\nESX = exports[Config.FrameworkName]:getSharedObject()\nfunction GetIdentifier(playerId)\n    return ESX.GetPlayerFromId(playerId)?.identifier\nend\nfunction GetName(playerId)\n    local xPlayer = ESX.GetPlayerFromId(playerId)\n    if xPlayer then\n        return xPlayer.getName()\n    end\n    return 'Unknown'\nend\nfunction GetDNA(playerId)\n    local xPlayer = ESX.GetPlayerFromId(playerId)\n    if xPlayer then\n        return xPlayer.getName()\n    end\n    return 'Unknown'\nend\nif not IsQBCore() then return end\nlocal QBCore = exports[Config.FrameworkName]:GetCoreObject()\nAddEventHandler(Config.PlayerLoadedEvent.qb, function()\n    PlayerData = QBCore.Functions.GetPlayerData()\n    PlayerLoaded = true\n    Wait(1000)\n    LoadEvidence()\nend)\nRegisterNetEvent('QBCore:Player:SetPlayerData', function(val)\n    PlayerData = val\nend)\nRegisterNetEvent('QBCore:Client:OnJobUpdate', function(JobInfo)\n    PlayerData.job = JobInfo\n    lib.hideTextUI()\nend)\nRegisterNetEvent('QBCore:Client:OnPlayerUnload', function()\n    table.wipe(PlayerData)\n    PlayerLoaded = false\n    RemoveEverything()\nend)\nfunction GetJob()\n    return PlayerData.job.name or ''\nend\nfunction GetGrade()\n    return PlayerData.job.grade.level or 0\nend\nfunction GetIdentifier()\n    return PlayerData.citizenid or ''\nend\nfunction GetRPName()\n    return ('%s %s'):format(PlayerData.charinfo.firstname, PlayerData.charinfo.lastname)\nend\nAddEventHandler('onResourceStart', function(resource)\n    if cache.resource == resource then\n        Wait(500)\n        PlayerData = QBCore.Functions.GetPlayerData()\n        PlayerLoaded = true\n    end\nend)\nif not IsQBCore() then return end\nQBCore = exports[Config.FrameworkName]:GetCoreObject()\nfunction GetIdentifier(playerId)\n    return QBCore.Functions.GetPlayer(playerId)?.PlayerData.citizenid or ''\nend\nfunction GetName(playerId)\n    local ply = QBCore.Functions.GetPlayer(playerId)\n    if ply then\n        return ('%s %s'):format(ply.PlayerData.charinfo.firstname, ply.PlayerData.charinfo.lastname)\n    end\n    return 'Unknown'\nend\nfunction GetDNA(playerId)\n    local ply = QBCore.Functions.GetPlayer(playerId)\n    if ply then\n        return ('%s %s'):format(ply.PlayerData.charinfo.firstname, ply.PlayerData.charinfo.lastname)\n    end\n    return 'Unknown'\nend\nPlayerData = {}\nPlayerLoaded = false\nfunction IsESX()\n    return GetResourceState(\"es_extended\") ~= \"missing\"\nend\nfunction IsQBCore()\n    return GetResourceState(\"qb-core\") ~= \"missing\"\nend\nInv = {}\nlocal oxinv = GetResourceState('ox_inventory'):find('start')\nlocal qsinv = GetResourceState('qs-inventory'):find('start')\nlocal qbinv = GetResourceState('qb-inventory'):find('start')\nlocal psinv = GetResourceState('ps-inventory'):find('start')\nlocal ljinv = GetResourceState('lj-inventory'):find('start')\nlocal core = GetResourceState('core_inventory'):find('start')\nlocal codem = GetResourceState('codem-inventory'):find('start')\nif oxinv then\n    Inv = { ox = true, exp = exports.ox_inventory }\nelseif qsinv then\n    Inv = { qs = true, exp = exports['qs-inventory'] }\nelseif qbinv or psinv or ljinv then\n    Inv = { qb = true }\nelseif core then\n    Inv = { core = true, exp = exports.core_inventory }\nelseif codem then\n    Inv = { codem = true }\nend\nSetTimeout(1000, function()\n    if table.type(Inv) == 'empty' then\n        warn(\"No inventory resource was found, check uniq_evidence/inventory.lua\")\n    end\nend)\nfunction Notify(msg, type)\n    lib.notify({\n        description = msg,\n        type = type,\n        position = 'bottom'\n    })\nend\nRegisterNetEvent('uniq_evidence:Notify', Notify)\n-- callback is in server/editable.lua\nfunction HasItem(item)\n    return lib.callback.await('uniq_evidence:HasItem', 100, item)\nend\nif Inv.ox then\n    Inv.exp:displayMetadata('evidence_caseId', 'Evidence No')\nend\nif Inv.core then\n    function GetCoreInv(source, prefix)\n        local identifier = GetIdentifier(source)\n        if identifier then\n            return IsESX() and ('%s-%s'):format(prefix, identifier:gsub(':','')) or ('%s-%s'):format(prefix, identifier)\n        end\n        return false\n    end\n    lib.callback.register('uniq_evidence:server:GetCurrentWeaponCore', function(source)\n        local inventory = GetCoreInv(source, 'primary')\n        if inventory then\n            local wep = Inv.exp:getInventory(inventory)[1]\n            if wep then\n                return wep\n            end\n        end\n        return false\n    end)\nend\nfunction RegisterUsableItem()\n    if IsESX() then\n        if Config.Features.FingerprintsVehicle then\n            ESX.RegisterUsableItem('uv_flashlight', function(source)\n                TriggerClientEvent('uniq_evidence:CheckFingerprints', source)\n            end)\n            ESX.RegisterUsableItem('tweezers', function(source)\n                TriggerClientEvent('uniq_evidence:CheckForShellsInVeh', source)\n            end)\n            ESX.RegisterUsableItem('cleaning_kit', function(source)\n                TriggerClientEvent('uniq_evidence:DestroyFingerPrintsVeh', source)\n            end)\n        end\n        if Config.Features.ShellsInVehicle then\n            ESX.RegisterUsableItem('cleaning_shells', function(source)\n                TriggerClientEvent('uniq_evidence:CheckShellsVehicle', source)\n            end)\n        end\n    elseif IsQBCore() then\n        if Config.Features.FingerprintsVehicle then\n            QBCore.Functions.CreateUseableItem('uv_flashlight', function(source)\n                TriggerClientEvent('uniq_evidence:CheckFingerprints', source)\n            end)\n            QBCore.Functions.CreateUseableItem('tweezers', function(source)\n                TriggerClientEvent('uniq_evidence:CheckForShellsInVeh', source)\n            end)\n            QBCore.Functions.CreateUseableItem('cleaning_kit', function(source)\n                TriggerClientEvent('uniq_evidence:DestroyFingerPrintsVeh', source)\n            end)\n        end\n        if Config.Features.ShellsInVehicle then\n            QBCore.Functions.CreateUseableItem('cleaning_shells', function(source)\n                TriggerClientEvent('uniq_evidence:CheckShellsVehicle', source)\n            end)\n        end\n    end\nend\nCreateThread(RegisterUsableItem)\nfunction GetWeaponSerial(src, weapon, slot)\n    local serial = L('unknwn')\n    if Inv.ox then\n        local wep = Inv.exp:GetCurrentWeapon(src)\n        if wep and wep.metadata then\n            serial = wep.metadata.serial\n        end\n    elseif Inv.qb then\n        local wep = QBCore.Functions.GetPlayer(src)?.Functions.GetItemByName(QBCore.Shared.Weapons[weapon].name)\n        if wep and wep.info then\n            serial = wep.info.serie\n        end\n    elseif Inv.qs then\n        local items = Inv.exp:GetInventory(src)\n        for k,v in pairs(items) do\n            if v.name == weapon and slot == v.slot then\n                if v.info then\n                    serial = v.info.serie\n                    break\n                end\n            end\n        end\n    elseif Inv.core then\n        local inventory = GetCoreInv(src, 'primary')\n        if inventory then\n            local wep = Inv.exp:getInventory(inventory)[1]\n            if wep and wep.category == 'weapons' then\n                serial = wep.info.serial\n            end\n        end\n    elseif Inv.codem then\n        if weapon and weapon.info then\n            serial = weapon.info.series\n        end\n    end\n    return serial\nend\nlib.callback.register('uniq_evidence:HasItem', function(source, item)\n    if Inv.ox then\n        local count = Inv.exp:GetItemCount(source, item)\n        return count > 0\n    elseif Inv.qb then\n        return QBCore.Functions.HasItem(source, item, 1)\n    elseif Inv.qs then\n        local itemm = Inv.exp:GetItemByName(source, item)\n        if itemm then\n            return itemm.amount > 0\n        end\n    elseif Inv.core then\n        local inventory = GetCoreInv(source, 'content')\n        local Item = Inv.exp:getItem(inventory, item)\n        if Item then\n            return Item.count > 0\n        end\n    elseif Inv.codem then\n        local itemm = exports['codem-inventory']:GetItemByName(source, item)\n        if itemm then\n            return tonumber(itemm.amount) > 0\n        end\n    end\nend)\nfunction AddItem(source, item, metadata)\n    if Inv.ox then\n        Inv.exp:AddItem(source, item, 1, metadata)\n    elseif Inv.qb then\n        QBCore.Functions.GetPlayer(source)?.Functions.AddItem(item, 1, nil, metadata)\n    elseif Inv.qs then\n        Inv.exp:AddItem(source, item, 1, nil, metadata)\n    elseif Inv.core then\n        local inventory = GetCoreInv(source, 'content')\n        Inv.exp:addItem(inventory, item, 1, metadata, 'content')\n    elseif Inv.codem then\n        exports['codem-inventory']:AddItem(source, item, 1, nil, metadata)\n    end\nend\nfunction RemoveItem(source, item, slot)\n    if Inv.ox then\n        Inv.exp:RemoveItem(source, item, 1, nil, slot)\n    elseif Inv.qb then\n        QBCore.Functions.GetPlayer(source)?.Functions.RemoveItem(item, 1, slot)\n    elseif Inv.qs then\n        Inv.exp:RemoveItem(source, item, 1, slot)\n    elseif Inv.core then\n        local inventory = GetCoreInv(source, 'content')\n        local Item = Inv.exp:getInventory(inventory)\n        if Item then\n            for k,v in pairs(Item) do\n                if v.name == item then\n                    Inv.exp:removeItemExact(inventory, v.id, 1)\n                    break\n                end\n            end\n        end\n    elseif Inv.codem then\n        exports['codem-inventory']:RemoveItem(source, item, 1, slot)\n    end\nend\nfunction GetItemSlot(source, item, caseId)\n    if Inv.ox then\n        local items = Inv.exp:Search(source, 'slots', item)\n        if items then\n            for k,v in pairs(items) do\n                if v.metadata.evidence_caseId == caseId then\n                    return v.slot\n                end\n            end\n        end\n    elseif Inv.qb then\n        local Player = QBCore.Functions.GetPlayer(source)\n        for k,v in pairs(Player.PlayerData.items) do\n            if v.name == item then\n                if v.info.evidence_caseId == caseId then\n                    return v.slot\n                end\n            end\n        end\n    elseif Inv.qs then\n        local items = Inv.exp:GetInventory(source)\n        for k,v in pairs(items) do\n            if v.name == item then\n                if v.info.evidence_caseId == caseId then\n                    return v.slot\n                end\n            end\n        end\n    elseif Inv.core then\n        return 0\n    elseif Inv.codem then\n        for k,v in pairs(exports['codem-inventory']:GetItemsByName(source, item)) do\n            if v.name == item and v.info then\n                if v.info.evidence_caseId == caseId then\n                    return v.slot\n                end\n            end\n        end\n    end\nend\nlib.callback.register('uniq_evidence:GetEvidenceByType', function(source, typee)\n    local options = {}\n    if Inv.ox then\n        local items = Inv.exp:GetInventoryItems(source)\n        if items then\n            for k,v in pairs(items) do\n                if v.metadata.evidence_type == typee then\n                    options[#options + 1] = { label = v.metadata.evidence_caseId, value = v.metadata.evidence_caseId }\n                end\n            end\n        end\n    elseif Inv.qb then\n        local Player = QBCore.Functions.GetPlayer(source)\n        for k,v in pairs(Player.PlayerData.items) do\n            if v.info.evidence_type == typee then\n                options[#options + 1] = { label = v.info.evidence_caseId, value = v.info.evidence_caseId }\n            end\n        end\n    elseif Inv.qs then\n        local items = Inv.exp:GetInventory(source)\n        for k,v in pairs(items) do\n            if v.info.evidence_type == typee then\n                options[#options + 1] = { label = v.info.evidence_caseId, value = v.info.evidence_caseId }\n            end\n        end\n    elseif Inv.core then\n        local inventory = GetCoreInv(source, 'content')\n        if inventory then\n            local items = Inv.exp:getInventory(inventory)\n            for k, v in pairs(items) do\n                if v.info.evidence_type == typee then\n                    options[#options + 1] = { label = v.info.evidence_caseId, value = v.info.evidence_caseId }\n                end\n            end\n        end\n    elseif Inv.codem then\n        local identifier = GetIdentifier(source)\n        local inv = exports['codem-inventory']:GetInventory(identifier, source)\n        if inv then\n            for k,v in pairs(inv) do\n                if v.info?.evidence_type == typee then\n                    options[#options + 1] = { label = v.info.evidence_caseId, value = v.info.evidence_caseId }\n                end\n            end\n        end\n    end\n    return options\nend)\nlib.callback.register('uniq_evidence:GetItemMetadata', function(source, type, caseId)\n    if Inv.ox then\n        local items = Inv.exp:GetInventoryItems(source)\n        if items then\n            for k,v in pairs(items) do\n                if v.metadata.evidence_type == type and v.metadata.evidence_caseId == caseId then\n                    return v.metadata\n                end\n            end\n        end\n    elseif Inv.qb then\n        local Player = QBCore.Functions.GetPlayer(source)\n        for k,v in pairs(Player.PlayerData.items) do\n            if v.info.evidence_type == type and v.info.evidence_caseId == caseId then\n                return v.info\n            end\n        end\n    elseif Inv.qs then\n        local items = Inv.exp:GetInventory(source)\n        for k,v in pairs(items) do\n            if v.info.evidence_type == type and v.info.evidence_caseId == caseId then\n                return v.info\n            end\n        end\n    elseif Inv.core then\n        local inventory = GetCoreInv(source, 'content')\n        if inventory then\n            local items = Inv.exp:getInventory(inventory)\n            for k,v in pairs(items) do\n                if v.info?.evidence_type == type and v.info.evidence_caseId == caseId then\n                    return v.info\n                end\n            end\n        end\n    elseif Inv.codem then\n        local identifier = GetIdentifier(source)\n        local inv = exports['codem-inventory']:GetInventory(identifier, source)\n        if inv then\n            for k,v in pairs(inv) do\n                if v.info?.evidence_type == type and v.info.evidence_caseId == caseId then\n                    return v.info\n                end\n            end\n        end\n    end\n    return {}\nend)\nRegisterNetEvent('uniq_evidence:addBloodMetadata', function(weapon, target)\n    local name = GetName(target)\n    local src = source\n    if name then\n        if Inv.ox then\n            if weapon and weapon.metadata then\n                if not weapon.metadata.dna then\n                    weapon.metadata.dna = {}\n                end\n                if not lib.table.contains(weapon.metadata.dna, name) then\n                    table.insert(weapon.metadata.dna, name)\n                    Inv.exp:SetMetadata(src, weapon.slot, weapon.metadata)\n                    if Config.Notify.blood then\n                        TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.have_blood'), 'warning')\n                    end\n                end\n            end\n        elseif Inv.qb then\n            if weapon  then\n                local Player = QBCore.Functions.GetPlayer(src)\n                if Player then\n                    local item = Player.Functions.GetItemByName(weapon.name)\n                    if item then\n                        if not item.info.dna then\n                            item.info.dna = {}\n                        end\n                    end\n                    if not lib.table.contains(item.info.dna, name) then\n                        table.insert(item.info.dna, name)\n                        Player.PlayerData.items[item.slot].info = item.info\n                        Player.Functions.SetPlayerData('items', Player.PlayerData.items)\n                        if Config.Notify.blood then\n                            TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.have_blood'), 'warning')\n                        end\n                    end\n                end\n            end\n        elseif Inv.qs then\n            if weapon and weapon.info then\n                if not weapon.info.dna then\n                    weapon.info.dna = {}\n                end\n                if not lib.table.contains(weapon.info.dna, name) then\n                    table.insert(weapon.info.dna, name)\n                    Inv.exp:SetItemMetadata(src, weapon.slot, weapon.info)\n                    if Config.Notify.blood then\n                        TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.have_blood'), 'warning')\n                    end\n                end\n            end\n        elseif Inv.core then\n            local inventory = GetCoreInv(src, 'primary')\n            if inventory then\n                local weapon = Inv.exp:getInventory(inventory)\n                if weapon and weapon.category == 'weapons' and weapon.info then\n                    if not weapon.info.dna then\n                        weapon.info.dna = {}\n                    end\n                    if not lib.table.contains(weapon.info.dna, name) then\n                        table.insert(weapon.info.dna, name)\n                        Inv.exp:updateMetadata(inventory, weapon.id, weapon.info)\n                        if Config.Notify.blood then\n                            TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.have_blood'), 'warning')\n                        end\n                    end\n                end\n            end\n        elseif Inv.codem then\n            if weapon then\n                if not weapon.info.dna then\n                    weapon.info.dna = {}\n                end\n                if not lib.table.contains(weapon.info.dna, name) then\n                    table.insert(weapon.info.dna, name)\n                    exports['codem-inventory']:SetItemMetadata(src, weapon.slot, weapon.info)\n                    if Config.Notify.blood then\n                        TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.have_blood'), 'warning')\n                    end\n                end\n            end\n        end\n    end\nend)\nRegisterNetEvent('uniq_evidence:server:WeaponFingerprints', function(currentWeapon)\n    local src = source\n    local name = GetName(src)\n    if Inv.ox then\n        local weapon = Inv.exp:Search(src, 'slots', currentWeapon.name)\n        local metadata\n        if weapon then\n            for k,v in pairs(weapon) do\n                if v.metadata.serial == currentWeapon.metadata.serial then\n                    metadata = v.metadata\n                    break\n                end\n            end\n        end\n        if not metadata.fingerprint then\n            metadata.fingerprint = {}\n        end\n        if lib.table.contains(metadata.fingerprint, name) then return end\n        table.insert(metadata.fingerprint, name)\n        Inv.exp:SetMetadata(src, currentWeapon.slot, metadata)\n    elseif Inv.qb then\n        if currentWeapon then\n            local Player = QBCore.Functions.GetPlayer(src)\n            if Player then\n                local item = Player.Functions.GetItemByName(currentWeapon.name)\n                if not item.info.fingerprint then\n                    item.info.fingerprint = {}\n                end\n                if lib.table.contains(item.info.fingerprint, name) then return end\n                table.insert(item.info.fingerprint, name)\n                Player.PlayerData.items[item.slot].info = item.info\n                Player.Functions.SetPlayerData('items', Player.PlayerData.items)\n            end\n        end\n    elseif Inv.qs then\n        if not currentWeapon.info.fingerprint then\n            currentWeapon.info.fingerprint = {}\n        end\n        if lib.table.contains(currentWeapon.info.fingerprint, name) then return end\n        table.insert(currentWeapon.info.fingerprint, name)\n        Inv.exp:SetItemMetadata(src, currentWeapon.slot, currentWeapon.info)\n    elseif Inv.core then\n        local inventory = GetCoreInv(src, 'primary')\n        if inventory then\n            local item = Inv.exp:getInventory(inventory)[1]\n            if item.category == 'weapons' then\n                if not item.info.fingerprint then\n                    item.info.fingerprint = {}\n                end\n                if lib.table.contains(item.info.fingerprint, name) then return end\n                table.insert(item.info.fingerprint, name)\n                Inv.exp:updateMetadata(inventory, item.id, item.info)\n                if Config.Notify.printsweapon then\n                    TriggerClientEvent('uniq_evidence:Notify', src, L('Notify.left_fp'), 'warning')\n                end\n            end\n        end\n    elseif Inv.codem then\n        if currentWeapon then\n            if not currentWeapon.info.fingerprint then\n                currentWeapon.info.fingerprint = {}\n                if lib.table.contains(currentWeapon.info.fingerprint, name) then return end\n                table.insert(currentWeapon.info.fingerprint, name)\n                exports['codem-inventory']:SetItemMetadata(source, currentWeapon.slot, currentWeapon.info)\n            end\n        end\n    end\nend)\nLocales['en'] = {\n    unknwn = 'Unknown',\n    Input = {\n        title = 'Select Evidence',\n        desc = 'Select evidence that you want to analyse'\n    },\n    TextUI = {\n        destroy_shell = '[E] - Destroy shell evidence',\n        collect_shell = '[E] - Collect shell evidence',\n        collect_bullet = '[E] - Collect bullet evidence',\n        destroy_bullet = '[E] - Destroy bullet evidence',\n        collect_blood = '[E] - Collect blood evidence',\n        destroy_blood = '[E] - Destroy blood evidence',\n        a_shell = '[E] - Analyze Shell',\n        a_bullet = '[E] - Analyze Bullet',\n        database = '[E] - Open Evidence Database',\n        a_wep = '[E] - Analyze Weapon',\n        a_blood = '[E] - Analyze Blood',\n        a_veh_fp = '[E] - Analyze Fingerprints from vehicle'\n    },\n    Notify = {\n        no_bag = 'You dont have evidnece bag with you',\n        no_evidence = 'Looks like you dont have evidence with you to anaylse',\n        already_collecting = 'Somebody is already collecting this evidence',\n        cancled = 'You cancled searching',\n        cancled_a = 'You cancled analyzing evidence',\n        only_in_veh = 'You can use this only inside vehicle',\n        wrong = 'Something went wrong',\n        no_match = 'No matches',\n        no_evidence_db = 'No evidence in database',\n        left_fp = 'You left fingerprints on weapon',\n        need_hold_wep = 'You need to hold weapon in hand to scann it, make sure you wear gloves :)',\n        left_fp_veh = 'You left fingerprints in this vehicle',\n        no_veh = 'You are not inside any vehicle',\n        no_fp_found = 'No fingerprint were found in this vehicle',\n        found_fp = 'You found some fingerprints in vehicle',\n        destroyed_fp = 'You have destroyed fingerprints from this vehicle',\n        have_blood = 'You have blood on your weapon',\n        nothing_found = 'Nothing found',\n        cant_find_evidence = 'Can\\'t find evidence on server, server will remove it',\n        found_shell = 'You found bullet shells, there might be more',\n        destoyed_shell = 'You destrosyed bullet shells in this vehicle',\n        deleted = 'You succesfully deleted %s from database',\n        destroyed = 'Evidence Destroyed'\n    },\n    ProgressBar = {\n        blood_collect = 'Collecting blood evidence',\n        searching_shells = 'Searching for bullet shells',\n        analyzing_blood = 'Analyzing Blood...',\n        shell_collet = 'Collecting shell',\n        bullet_collect = 'Collecting bullet',\n        analyzing_evidence = 'Analyzing Evidence...',\n        analyzing_wep = 'Analyzing weapon',\n        searching_fp = 'Searching for fingerprints',\n        destorying = 'Destroying Evidence'\n    },\n    Report = {\n        title = 'Evidence: %s',\n        street = 'Street',\n        date = 'Date',\n        time = 'Time',\n        analyst = 'Anaylist',\n        ammo = 'Ammo Type',\n        location = 'Location',\n        serial = 'Weapon Serial Number',\n        label = 'Label',\n        fp_match = 'Fingerprints on weapon matches next entities',\n        blood_match = 'Blood on weapon matches next entities',\n        blood_match2 = 'Blood matches',\n        delete = 'Delete',\n        a_on = 'Analyzed on',\n        a_at = 'Analyzed at',\n        plate = 'Vehicle Plate',\n        fp_match2 = 'Fingerprints matches next entities',\n        color = 'Vehicle color',\n        archived = 'Archived Evidence',\n        wep_analysis = 'Weapon analysis'\n    },\n    Database = {\n        title = 'Evidence Database',\n        bullet_shell = 'Bullet & Shell Reports',\n        weapons = 'Weapon Reports',\n        blood = 'Blood Reports',\n        veh_fp = 'Vehicle Fingerprint Reports',\n        keyword = 'Keywords: Case ID, Date or Time, Street, Serial Number etc.',\n        search = {\n            title = 'Search',\n            label = 'Search for specific case'\n        }\n    }\n}\nConfig = {\n    Locale = 'en',\n    FrameworkName = IsESX() and 'es_extended' or 'qb-core',\n    PlayerLoadedEvent = {\n        esx = 'esx:playerLoaded',\n        qb = 'QBCore:Client:OnPlayerLoaded'\n    },\n    FlashLightWeapon = `WEAPON_FLASHLIGHT`,\n    -- Evidence will be wiped after remaining unchanged for the given time\n    DeleteEvidenceTime = '6 MONTH',\n    EvidenceDatabase = {\n        {\n            coords = vec3(441.754, -996.019, 30.690),\n            /*\n                table hash   > groups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n                table array  > groups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n                string       > groups = 'police'                            > only once job can access, no grade checks\n            */\n            groups = { ['police'] = 1 },\n            Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n        },\n        -- you can add more\n    },\n    Features = {\n        BloodGround = true,             -- Drops blood evidence on the ground upon death.\n        WeaponBlood = true,             -- Leaves blood evidence of the target when hitting somebody with a melee weapon\n        BulletAndShell = true,          -- Leaves bullet shell on the ground while firing a weapon.\n        Bullet = true,                  -- Leaves bullet evidence if bullet hits anything\n        ShellsInVehicle = true,         -- Allows searching for bullets in vehicles.\n        FingerprintsVehicle = true,     -- Leaves fingerprint evidence upon entering a vehicle without wearing gloves.\n        FingerprintsWeapon = true,      -- Leaves fingerprint evidence upon using a weapon without wearing gloves.\n    },\n    /*\n        %d/%m/%Y day/month/year\n        %d-%m-%Y day-month-year\n        %m/%d/%Y month/day/year\n        %m-%d-%Y month-day-year\n        %Y/%d/%m year/day/month\n        %Y-%d-%m year-day-month\n        etc\n    */\n    DateFormat = '%d/%m/%Y', -- day/month/year\n    -- variations that DOESN'T have gloves, might be differnet for you, depending on clothing pack\n    Gloves = {\n        [`mp_m_freemode_01`] = {\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n            11, 12, 13, 14, 15, 18, 26, 52,\n            53, 54, 55, 56, 57, 58, 59, 60,\n            61, 62, 112, 113, 114, 118, 125, 132\n        },\n        [`mp_f_freemode_01`] = {\n            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n            11, 12, 13, 14, 15, 19, 59, 60, 61,\n            62, 63, 64, 65, 66, 67, 68, 69, 70,\n            71, 129, 130, 131, 135, 142, 149, 153,\n            157, 161, 165\n        },\n        -- this models have gloves by default, you can add them here\n        [`s_m_y_swat_01`] = true,\n        /*\n            [`model_name`] = { variations that doesnt have gloves }\n            if case you use ped that has gloves by default but cant change variations (example s_m_y_swat_01 above),\n            you will do next\n            [`model_name`] = true     \n        */\n    },\n    BulletAndShell = {\n        BulletDestroyable = true,\n        ShellDestroyable = true,\n        /*\n            table hash   > CollectEvidenceGroups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n            table array  > CollectEvidenceGroups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n            string       > CollectEvidenceGroups = 'police'                            > only once job can access, no grade checks\n            string       > CollectEvidenceGroups = ''                                  > everyone can collect evidence\n        */\n        CollectEvidenceGroups = { 'police', 'sheriff' },\n        -- for how long it will collect evidence, 5000ms = 5 sec\n        CollectingTime = 5000,\n        \n        -- for how long it will analyze evidence, 5000ms = 5 sec\n        AnalyzingTime = 5000,\n        -- for how long it will analyze weapon, 10000ms = 10 sec\n        AnalyzingWeaponTime = 5000,\n        -- jobs that dont leave bullet evidence on ground when shooting\n        NoBulletEvidenceJob = {\n            ['police'] = true,\n            -- you can add more\n        },\n        -- weapons that should not leave bullet evidence when shooting\n        BlacklistWeapons = {\n            [`weapon_stungun`] = true,\n            -- you can add more\n        },\n        Shell = { type = 2, scaleX = 0.1, scaleY = 0.05, scaleZ = 0.07, r = 188, g = 159, b = 96 },\n        Bullet = { type = 2, scaleX = 0.1, scaleY = 0.05, scaleZ = 0.07, r = 182, g = 122, b = 94 },\n        -- time in minutes before evidence disappears\n        RemoveTime = 25,\n        -- police and grade that can delete evidence from database, must be hash\n        DeleteEvidence = { ['police'] = 2 },\n        -- you can add as many as you want\n        Scanner = {\n            {\n                type = 'shell', -- scanner for shells or bullet\n                coords = vec3(441.882, -991.446, 30.690),\n                /*\n                    table hash   > groups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n                    table array  > groups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n                    string       > groups = 'police'                            > only once job can access, no grade checks\n                */\n                groups = { ['police'] = 1 },\n                Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n            },\n            {\n                type = 'bullet',\n                coords = vec3(437.030, -990.831, 30.690),\n                groups = { ['police'] = 1 },\n                Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n            },\n            -- you can add more\n        },\n        EvidenceReport = {\n            date = true,            -- date when evidence was created\n            time = true,            -- time when evidence was created\n            street = true,          -- street address where evidence was created\n            ammolabel = true,       -- type of weapon it was fired from, AmmoLabels\n            weaponSerial = true,    -- serial number of weapon it was fired from, kinda op?\n            analyst = true,         -- name of player who analysed evidence\n            color = true,           -- color of vehicle (if bullet was taken out from vehicle)\n            plate = true,           -- plate of vehicle where shell was taken from   \n        }\n    },\n    Weapon = {\n        Scanner = {\n            {\n                coords = vec3(437.693, -994.525, 30.690),\n                /*\n                    table hash   > groups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n                    table array  > groups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n                    string       > groups = 'police'                            > only once job can access, no grade checks\n                */\n                groups = { ['police'] = 1 },\n                Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n            },\n            -- you can add more\n        },\n        -- police and grade that can delete evidence from database, must be hash\n        DeleteEvidence = { ['police'] = 2 },\n        EvidenceReport = {\n            date = true,            -- date when evidence was scanned\n            weaponLabel = true,     -- label of weapon\n            time = true,            -- time when evidence was scanned\n            ammolabel = true,       -- type of weapon it was fired from, AmmoLabels\n            weaponSerial = true,    -- serial number of weapon\n            analyst = true,         -- name of player who analysed evidence\n            fingerprint = true,     -- fingerprints of last person who used gun (if not wearing gloves)\n            dna = true,             -- DNA of victim\n        }\n    },\n    Blood = {\n        EvidenceDestroyable = true,\n        /*\n            table hash   > CollectEvidenceGroups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n            table array  > CollectEvidenceGroups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n            string       > CollectEvidenceGroups = 'police'                            > only once job can access, no grade checks\n            string       > CollectEvidenceGroups = ''                                  > everyone can collect evidence\n        */\n        CollectEvidenceGroups = { 'police', 'sheriff' },\n        -- if ranining, remove evidence?\n        RemoveEvidenceOnRain = true,\n        -- time in minutes before evidence disappears\n        RemoveTime = 25,\n        -- for how long it will collect evidence, 5000ms = 5 sec\n        CollectingTime = 5000,\n        -- for how long it will analyze evidence, 5000ms = 5 sec\n        AnalyzingTime = 5000,\n        -- blood on ground marker\n        Evidence = { type = 2, scaleX = 0.1, scaleY = 0.05, scaleZ = 0.07, r = 255, g = 0, b = 0 },\n        Scanner = {\n            {\n                coords = vec3(439.117, -993.290, 30.690),\n                /*\n                    table hash   > groups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n                    table array  > groups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n                    string       > groups = 'police'                            > only once job can access, no grade checks\n                */\n                groups = { ['police'] = 1 },\n                Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n            },\n            -- you can add more\n        },\n        -- police and grade that can delete evidence from database, must be hash\n        DeleteEvidence = { ['police'] = 2 },\n        EvidenceReport = {\n            street = true,          -- street where blood was found\n            date = true,            -- date when evidence was scanned\n            time = true,            -- time when evidence was scanned\n            analyst = true,         -- name of player who analysed evidence\n            dna = true,             -- DNA of victim\n        },\n    },\n    FingerprintsVehicle = {\n        /*\n            table hash   > CollectEvidenceGroups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n            table array  > CollectEvidenceGroups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n            string       > CollectEvidenceGroups = 'police'                            > only once job can access, no grade checks\n            string       > CollectEvidenceGroups = ''                                  > everyone can collect evidence\n        */\n        CollectEvidenceGroups = { 'police', 'sheriff' } ,\n        -- here you can whitelist vehicles in which you do not want to leave fingerprints\n        WhitelistModels = { `xyz`, },\n        -- here you can whitelist plates \n        WhiteListPlates = { 'xyz', },\n        WhitelistJobs = {\n            -- xyz and grade 2 and above wont leave fingerprints\n            ['xyz'] = 2\n        },\n        -- here you can add your identifier or citizenid\n        WhitelistIdentifiers = {\n            'char1:xyz',\n        },\n        -- time in msec for searching fingerprints in vehicle\n        FingerSearching = 2000,\n        Scanner = {\n            {\n                coords = vec3(461.881, -989.336, 24.915),\n                /*\n                    table hash   > groups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n                    table array  > groups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n                    string       > groups = 'police'                            > only once job can access, no grade checks\n                */\n                groups = { ['police'] = 1 },\n                Marker = { type = 2, scaleX = 0.3, scaleY = 0.2, scaleZ = 0.15, r = 30, g = 150, b = 30 },\n            },\n            -- you can add more\n        },\n        -- police and grade that can delete evidence from database, must be hash\n        DeleteEvidence = { ['police'] = 2 },\n        EvidenceReport = {\n            street = true,          -- street where fingerprints were found\n            date = true,            -- date when evidence was taken\n            time = true,            -- time when evidence was taken\n            analyst = true,         -- name of player who analysed evidence\n            plate = true,           -- vehicle plates\n            color = true,           -- vehicle color\n        }\n    },\n    ShellsInVehicle = {\n        /*\n            table hash   > CollectEvidenceGroups = { ['police'] = 1, ['sheriff'] = 5 } > grade 1 (and above) police and grade 5 (and above) sheriff can access\n            table array  > CollectEvidenceGroups = { 'police', 'sheriff' }             > police and sherrif can access, no grade check\n            string       > CollectEvidenceGroups = 'police'                            > only once job can access, no grade checks\n            string       > CollectEvidenceGroups = ''                                  > everyone can collect evidence\n        */\n        CollectEvidenceGroups = { 'police', 'sheriff' },\n        -- jobs that wont leave shell evidence in vehicle\n        NoShell = {\n            ['police'] = true\n        },\n        -- weapons that should not leave shell evidence when shooting\n        BlacklistWeapons = {\n            [`weapon_stungun`] = true\n        },\n        -- duration for searching for shells in vehicle\n        SearchingDuration = 2000,\n    },\n    Notify = {\n        blood = true,           -- notify player that he have blood on weapon after hitting somebody\n        printsweapon = true,    -- notify player that he left fingerprints on weapon\n        printsvehicle = true,   -- notify player that he left fingerprints in vehicle\n    },\n    AmmoLabels = {\n        [`WEAPON_ADVANCEDRIFLE`] = '5.56x45',\n        [`WEAPON_APPISTOL`] = '9mm',\n        [`WEAPON_ASSAULTRIFLE`] = '7.62x39',\n        [`WEAPON_ASSAULTRIFLE_MK2`] = '7.62x39',\n        [`WEAPON_ASSAULTSHOTGUN`] = '12 Gauge',\n        [`WEAPON_ASSAULTSMG`] = '5.56x45',\n        [`WEAPON_AUTOSHOTGUN`] = '12 Gauge',\n        [`WEAPON_BULLPUPRIFLE`] = '5.56x45',\n        [`WEAPON_BULLPUPRIFLE_MK2`] = '5.56x45',\n        [`WEAPON_BULLPUPSHOTGUN`] = '12 Gauge',\n        [`WEAPON_CARBINERIFLE`] = '5.56x45',\n        [`WEAPON_CARBINERIFLE_MK2`] = '5.56x45',\n        [`WEAPON_CERAMICPISTOL`] = '9mm',\n        [`WEAPON_COMBATMG`] = '5.56x45',\n        [`WEAPON_COMBATMG_MK2`] = '7.62x39',\n        [`WEAPON_COMBATPDW`] = '9mm',\n        [`WEAPON_COMBATPISTOL`] = '9mm',\n        [`WEAPON_COMBATSHOTGUN`] = '12 Gauge',\n        [`WEAPON_COMPACTLAUNCHER`] = '40mm Explosive',\n        [`WEAPON_COMPACTRIFLE`] = '7.62x39',\n        [`WEAPON_DBSHOTGUN`] = '12 Gauge',\n        [`WEAPON_DOUBLEACTION`] = '.38 LC',\n        [`WEAPON_EMPLAUNCHER`] = 'EMP round',\n        [`WEAPON_FIREWORK`] = 'Firework',\n        [`WEAPON_FLAREGUN`] = 'Flare round',\n        [`WEAPON_GADGETPISTOL`] = '9mm',\n        [`WEAPON_GRENADELAUNCHER`] = '40mm Explosive',\n        [`WEAPON_GUSENBERG`] = '.45 ACP',\n        [`WEAPON_HEAVYPISTOL`] = '.45 ACP',\n        [`WEAPON_HEAVYRIFLE`] = '5.56x45',\n        [`WEAPON_HEAVYSHOTGUN`] = '12 Gauge',\n        [`WEAPON_HEAVYSNIPER`] = '.50 BMG',\n        [`WEAPON_HEAVYSNIPER_MK2`] = '.50 BMG',\n        [`WEAPON_HOMINGLAUNCHER`] = 'Rocket',\n        [`WEAPON_MACHINEPISTOL`] = '9mm',\n        [`WEAPON_MARKSMANPISTOL`] = '.22 Long Rifle',\n        [`WEAPON_MARKSMANRIFLE`] = '7.62x51',\n        [`WEAPON_MARKSMANRIFLE_MK2`] = '7.62x51',\n        [`WEAPON_MG`] = '7.62x39',\n        [`WEAPON_MICROSMG`] = '.45 ACP',\n        [`WEAPON_MILITARYRIFLE`] = '5.56x45',\n        [`WEAPON_MINIGUN`] = '7.62x39',\n        [`WEAPON_MINISMG`] = '9mm',\n        [`WEAPON_MUSKET`] = '.50 Ball',\n        [`WEAPON_NAVYREVOLVER`] = '.44 Magnum',\n        [`WEAPON_PISTOL`] = '9mm',\n        [`WEAPON_PISTOL50`] = '.50 AE',\n        [`WEAPON_PISTOLXM3`] = '9mm',\n        [`WEAPON_PISTOL_MK2`] = '9mm',\n        [`WEAPON_PRECISIONRIFLE`] = '7.62x51',\n        [`WEAPON_PUMPSHOTGUN`] = '12 Gauge',\n        [`WEAPON_PUMPSHOTGUN_MK2`] = '12 Gauge',\n        [`WEAPON_RAILGUN`] = 'Railgun charge',\n        [`WEAPON_RAILGUNXM3`] = 'Railgun charge',\n        [`WEAPON_RAYCARBINE`] = 'Laser charge',\n        [`WEAPON_RAYMINIGUN`] = 'Laser charge',\n        [`WEAPON_REVOLVER`] = '.44 Magnum',\n        [`WEAPON_REVOLVER_MK2`] = '.44 Magnum',\n        [`WEAPON_RPG`] = 'Rocket',\n        [`WEAPON_SAWNOFFSHOTGUN`] = '12 Gauge',\n        [`WEAPON_SMG`] = '9mm',\n        [`WEAPON_SMG_MK2`] = '9mm',\n        [`WEAPON_SNIPERRIFLE`] = '7.62x51',\n        [`WEAPON_SNSPISTOL`] = '.45 ACP',\n        [`WEAPON_SNSPISTOL_MK2`] = '.45 ACP',\n        [`WEAPON_SPECIALCARBINE`] = '5.56x45',\n        [`WEAPON_SPECIALCARBINE_MK2`] = '5.56x45',\n        [`WEAPON_TACTICALRIFLE`] = '5.56x45',\n        [`WEAPON_TECPISTOL`] = '9mm',\n        [`WEAPON_VINTAGEPISTOL`] = '9mm',\n    }\n}"}},"/paid/farming":{"title":"Farming","data":{}},"/paid/farming/accessiable":{"title":"Accessible code","data":{}},"/paid/farming/about":{"title":"About Asset","data":{}},"/paid/gang":{"title":"Gang","data":{}},"/paid/gang/accessiable":{"title":"Accessible code","data":{}},"/paid/gang/about":{"title":"About Asset","data":{}},"/paid/garage":{"title":"Garage","data":{}},"/paid/garage/about":{"title":"About Asset","data":{}},"/paid/garage/accessiable":{"title":"Accessible code","data":{}},"/paid/gasstations":{"title":"Gasstations","data":{}},"/paid/gasstations/about":{"title":"About Asset","data":{}},"/paid/hud/about":{"title":"About Asset","data":{}},"/paid/hud":{"title":"Hud","data":{}},"/paid/hud/accessiable":{"title":"Accessible code","data":{}},"/paid/jobcreator":{"title":"Jobcreator","data":{}},"/paid/jobcreator/about":{"title":"About Asset","data":{}},"/paid/jobcreator/accessiable":{"title":"Accessible code","data":{}},"/paid/marketplace/about":{"title":"About Asset","data":{}},"/paid/marketplace":{"title":"Marketplace","data":{}},"/paid/marketplace/accessiable":{"title":"Accessible code","data":{}},"/paid/mechanic/about":{"title":"About Asset","data":{}},"/paid/mechanic":{"title":"Mechanic","data":{}},"/paid/mechanic/accessiable":{"title":"Accessible code","data":{}},"/paid/objectcreator/about":{"title":"About Asset","data":{"compatible-frameworks#Compatible Frameworks:":"ESX\nQB Core\nQBOX"}},"/paid/objectcreator":{"title":"Object Creator","data":{"":"System that allows dynamic creation & configuration of unlimited number of Objects on a live server"}},"/paid/objectcreator/accessiable":{"title":"Accessible code","data":{"":"List of accesiable code for Object Creator\nfunction sendNotify(title, description, type)\n    lib.notify({\n        title = title,\n        description = description,\n        duration = Shared.Notify.duration,\n        type = type,\n        position = Shared.Notify.position\n    })\nend\nRegisterNetEvent('objectcreator:notify', sendNotify)\n-- Text UI\nfunction textUI(description, icon)\n    lib.showTextUI(description, {\n        position = Shared.TextUI.position,\n        icon = icon\n    })\nend\nfunction hideTextUI()\n    lib.hideTextUI()\nend\n-- Progress Bar\nfunction progressBar(duration, label, dict, clip)\n    lib.progressBar({\n        duration = duration,\n        label = label,\n        useWhileDead = false,\n        canCancel = false,\n        disable = {\n            car = true,\n        },\n        anim = {\n            dict = dict,\n            clip = clip\n        }\n    })\nend\n-- 3D Text\nfunction DrawText3D(x, y, z, text)\n    local onScreen, _x, _y = World3dToScreen2d(x, y, z)\n    local px, py, pz = table.unpack(GetGameplayCamCoords())\n    \n    SetTextScale(0.5, 0.5)\n    SetTextFont(4)\n    SetTextProportional(1)\n    SetTextColour(255, 255, 255, 215)\n    SetTextEntry(\"STRING\")\n    SetTextCentre(1)\n    AddTextComponentString(text)\n    DrawText(_x, _y)\nend\n-- Draw Marker\nfunction DrawMarkerAtCoords(x, y, z, scale)\n    DrawMarker(1, x, y, z, 0, 0, 0, 0, 0, 0, scale.x, scale.y, scale.z, 255, 255, 255, 255, false, true, 2, nil, nil, false)\nend\n-- Discord Logs\nlocal webhook = Shared.Logs.webhook\nfunction logger(message)\n    if Shared.Logs.enabled then\n        if webhook ~= '' then\n            PerformHttpRequest(webhook, function(status) end, 'POST', json.encode({\n                username = cache.resource,\n                embeds = {{\n                    color = Shared.Logs.color,\n                    title = Shared.Logs.servername,\n                    description = message,\n                    footer = {\n                        text = os.date(),\n                        icon_url = Shared.Logs.icon_url\n                    }\n                }}\n            }), { ['Content-Type'] = 'application/json' })\n        end\n    end\nend\n-- Collectible Function\nfunction collectibleReward()\n    -- code for sending reward after collecting object\nend\nShared = {\n    Locale = 'en',\n    Notify = {\n        duration = 5000, -- miliseconds\n        position = 'top-right' -- 'top' or 'top-right' or 'top-left' or 'bottom' or 'bottom-right' or 'bottom-left' or 'center-right' or 'center-left'\n    },\n    \n    TextUI = {\n        position = 'right-center' -- 'right-center' or 'left-center' or 'top-center' or 'bottom-center'\n    },\n    Logs = {\n        enabled = true,\n        webhook = '',\n        servername = 'Uniq Scripts',\n        color = 6579450,\n        icon_url = 'https://dunb17ur4ymx4.cloudfront.net/webstore/logos/046c8efd198a2806b6ae46490f6aa780a225125e.png'\n    },\n    Commands = {\n        adminmenu = {\n            name = 'objectcreator',         -- command for accessing admin panel\n            restricted = 'group.admin',     -- group that will have access to the command \n        }\n    },\n    Keys = { -- https://docs.fivem.net/docs/game-references/controls/\n        finish = 191,\n        cancel = 194,\n    },\n    targetType = 'ox', -- ox/qb - if on ESX use \"ox\"\n    spawnObjectDistance = 100, -- the distance at which objects spawn for players\n    collectibleSettings = { -- settings for collectible objects\n        distance = 5, -- the distance from which it is possible to collect the object\n        key = 38, -- key to collect the object - [default: E]\n        keyLabel = 'E',\n        targetIcon = 'fas fa-hand-holding',\n        animation = {\n            dict = 'anim@amb@business@coc@coc_unpack_cut@',\n            clip = 'fullcut_cycle_v1_cokecutter'\n        },\n    },\n}\nLocales['en'] = {\n    menu = {\n        admin_title = 'Admin Menu',\n        create_object = 'Create Object',\n        create_object_desc = 'Use https://gtahash.ru to search for objects',\n        delete_object = 'Delete Object(s)',\n        delete_object_desc = 'Delete object permanently from the server',\n        edit_objects = 'Edit Objects',\n        edit_objects_desc = 'Find & edit any object created on the server',\n        refresh_data = 'Refresh created objects data',\n    },\n    context = {\n        creator = {\n            object_name = 'Object Name',\n            object_name_desc = '\"name\" value of the object you want to create',\n            isdoor = 'Is object a door?',\n            restricted_jobs = 'Restricted Jobs',\n            restricted_jobs_desc = 'Jobs that can see this object (empty - everyone)',\n            collision = 'Object Collision',\n            interaction = 'Interaction',\n            interaction_desc = 'Adjust the ability of player\\'s interaction with the object (empty - no interaction)',\n            interaction_types = {\n                target = 'Target',\n                text_ui = 'Text UI',\n                text_3d = '3D Text',\n                marker = 'Marker'\n            },\n            frozen = 'Object Frozen?',\n            collectible = 'Collectible?',\n            temporary = 'Temporary?',\n            move_object = {\n                ('MOUSE - Move  \\n'),\n                ('LEFT & RIGHT - Rotate  \\n'),\n                ('ENTER - Finish  \\n'),\n                ('BACKSPACE - Cancel'),\n            }\n        },\n        editor = {\n            change_object = 'Change Object',\n            change_object_desc = 'Change model of the object that will be created',\n            move_object = 'Move Object',\n            move_object_desc = 'Change object\\'s coords & rotation',\n            teleport = 'Teleport To The Object',\n            settings = 'Settings',\n            settings_desc = 'Configure some of the settings for this object',\n            delete_object = 'Delete Object',\n            delete_object_desc = 'Object will be instantly permanently deleted from the server & database',\n        }\n    },\n    input = {\n        select_object = 'Select Object',\n        select_object_desc = 'Select the object you want to edit',\n        select_objects = 'Select Object(s)',\n    },\n    target = {\n        collect = 'Collect %s and get rewards',\n    },\n    progress = {\n        collecting = 'Collecting Object',\n    },\n    alert = {\n        delete_object = 'Are you sure you want to delete %s?',\n    },\n    commands = {\n        adminmenu = 'Access the objects Admin Menu',\n    },\n    logs = {\n        objects_loaded = 'All objects have been loaded & created',\n        object_created = '**%s** created a new object.\\n- ID: **%s**\\n- Object Name: **%s**\\n- Object Is Door: **%s**\\n- Restricted Jobs: **%s**\\n- Collision Enabled: **%s**\\n- Interaction: **%s**\\n- Object Is Frozen: **%s**\\n- Object is Collectible: **%s**\\n- Object Is Temporary: **%s**\\n- Coords: **%s**\\n- Heading: **%s**',\n        object_deleted = '**%s** deleted an object.\\n- Object ID: **%s**',\n        object_collected = '**%s** collected an object.\\n- Object ID: **%s**',\n        object_name_changed = '**%s** changed object name.\\n- Object ID: **%s**\\n- New Object Name: **%s**.\\n- New Object ID: **%s**',\n        object_coords_changed = '**%s** changed object coords.\\n- Object ID: **%s**\\n- New Coords: **%s**.\\n- New Heading: **%s**',\n        object_settings_updated = '**%s** updated object settings.\\n- Object ID: **%s**\\n- Updated Settings: **%s**',\n        restricted_jobs_update = '**%s** updated object restricted jobs.\\n- Object ID: **%s**\\n- Updated Restricted Jobs: **%s**',\n    },\n    notify = {\n        object_not_exist = 'The object you tried to create doesn\\'t exist',\n        object_created = 'The object \"%s\" with ID %s has been successfully created',\n        object_deleted = 'The object ID %s has been successfully deleted',\n        object_collected = 'You have successfully collected object %s',\n        data_refreshed = 'Objects data successfully refreshed',\n        teleported = 'Successfully teleported to the object %s',\n        name_changed = 'Name for object ID %s successfully updated. New name: %s, new ID: %s',\n        coords_changed = 'Coords for object ID %s successfully updated',\n        settings_updated = 'Settings for object ID %s successfully updated',\n        restricted_jobs_update = 'Restricted Jobs for object ID %s successfully updated',\n    }\n}"}},"/paid/ownablebanks/about":{"title":"About Asset","data":{"compatible-frameworks#Compatible Frameworks:":"ESX\nQB Core\nQBOX"}},"/paid/ownablebanks/accessiable":{"title":"Accessible code","data":{"":"Config = {\n    locale = 'en',\n    versionCheck = true,\n    alignMenu = 'top-right',\n    alignTextUI = 'right-center',\n    useTarget = false,\n    targetType = 'ox', -- ox, qb\n    targetDistance = 2.0,\n    commands = {\n        {\n            name = 'banks',\n            permission = 'group.admin',\n            help = 'Bank Menu (Create Bank, Delete Bank, Edit Banks, Refresh Data)'\n        }\n    },\n    whitelistedSocieties = {\n        'police', 'ambulance'\n    },\n    addressSheme = 'xxx-xxx-xxx',\n    maintenancePayDays = 7,\n    maxPersonalAccountPerBank = 2,\n    maxSocietyAccountPerBank = 1,\n    maxOwnedBanks = 2,\n    changenamePrice = 5000,\n    maxTaxValue = 50,\n    personalAccountIconColor = 'lightblue',\n    societyAccountIconColor = 'green',\n    drawPoint = 10.0,\n    intaractionDistance = 1.0,\n    markers = {\n        bank = {\n            id = 29,\n            color = { r = 27, g = 111, b = 226, a = 100 },\n            rotating = true,\n            jumping = false,\n            size = vec3(0.25, 0.25, 0.25),\n            rotate = vec3(0.0, 0.0, 0.0)\n        },\n        boss = {\n            id = 20,\n            color = { r = 27, g = 111, b = 226, a = 100 },\n            rotating = true,\n            jumping = false,\n            size = vec3(0.25, 0.25, 0.25),\n            rotate = vec3(0.0, 0.0, 0.0)\n        },\n    },\n    atmBlip = {\n        enable = true,\n        id = 108,\n        color = 2,\n        scale = 0.5,\n        display = 4\n    },\n    atms = {\n        { price = 5000, coords = vec3(-386.733, 6045.953, 31.501) },\n        { price = 2500, coords = vec3(-284.037, 6224.385, 31.187) },\n        { price = 2500, coords = vec3(-135.165, 6365.738, 31.101) },\n        { price = 2500, coords = vec3(-94.9690, 6455.301, 31.784) },\n        { price = 2500, coords = vec3(155.4300, 6641.991, 31.784) },\n        { price = 2500, coords = vec3(174.6720, 6637.218, 31.784) },\n        { price = 2500, coords = vec3(1703.138, 6426.783, 32.730) },\n        { price = 2500, coords = vec3(1735.114, 6411.035, 35.164) },\n        { price = 2500, coords = vec3(1702.842, 4933.593, 42.051) },\n        { price = 2500, coords = vec3(1967.333, 3744.293, 32.272) },\n        { price = 2500, coords = vec3(1821.917, 3683.483, 34.244) },\n        { price = 2500, coords = vec3(540.0420, 2671.007, 42.177) },\n        { price = 2500, coords = vec3(2564.399, 2585.100, 38.016) },\n        { price = 2500, coords = vec3(2558.683, 349.6010, 108.050) },\n        { price = 2500, coords = vec3(2558.051, 389.4817, 108.660) },\n        { price = 2500, coords = vec3(1077.692, -775.796, 58.218) },\n        { price = 2500, coords = vec3(1139.018, -469.886, 66.789) },\n        { price = 2500, coords = vec3(1168.975, -457.241, 66.641) },\n        { price = 2500, coords = vec3(1153.884, -326.540, 69.245) },\n        { price = 2500, coords = vec3(381.2827, 323.2518, 103.270) },\n        { price = 2500, coords = vec3(236.4638, 217.4718, 106.840) },\n        { price = 2500, coords = vec3(265.0043, 212.1717, 106.780) },\n        { price = 2500, coords = vec3(285.2029, 143.5690, 104.970) },\n        { price = 2500, coords = vec3(157.7698, 233.5450, 106.450) },\n        { price = 2500, coords = vec3(-164.568, 233.5066, 94.919) },\n        { price = 2500, coords = vec3(-1827.04, 785.5159, 138.020) },\n        { price = 2500, coords = vec3(-1409.39, -99.2603, 52.473) },\n        { price = 2500, coords = vec3(-1205.35, -325.579, 37.870) },\n        { price = 2500, coords = vec3(-2072.41, -316.959, 13.345) },\n        { price = 2500, coords = vec3(-2975.72, 379.7737, 14.992) },\n        { price = 2500, coords = vec3(-2955.70, 488.7218, 15.486) },\n        { price = 2500, coords = vec3(-3044.22, 595.2429, 7.595) },\n        { price = 2500, coords = vec3(-3144.13, 1127.415, 20.868) },\n        { price = 2500, coords = vec3(-3241.10, 996.6881, 12.500) },\n        { price = 2500, coords = vec3(-3241.11, 1009.152, 12.877) },\n        { price = 2500, coords = vec3(-1305.40, -706.240, 25.352) },\n        { price = 2500, coords = vec3(-538.225, -854.423, 29.234) },\n        { price = 2500, coords = vec3(-711.156, -818.958, 23.768) },\n        { price = 2500, coords = vec3(-717.614, -915.880, 19.268) },\n        { price = 2500, coords = vec3(-526.566, -1222.90, 18.434) },\n        { price = 2500, coords = vec3(-256.831, -719.646, 33.444) },\n        { price = 2500, coords = vec3(-203.548, -861.588, 30.205) },\n        { price = 2500, coords = vec3(112.4102, -776.162, 31.427) },\n        { price = 2500, coords = vec3(112.9290, -818.710, 31.386) },\n        { price = 2500, coords = vec3(119.9000, -883.826, 31.191) },\n        { price = 2500, coords = vec3(-846.304, -340.402, 38.687) },\n        { price = 2500, coords = vec3(-1204.35, -324.391, 37.877) },    \n        { price = 2500, coords = vec3(-56.1935, -1752.53, 29.452) },\n        { price = 2500, coords = vec3(-261.692, -2012.64, 30.121) },\n        { price = 2500, coords = vec3(-273.001, -2025.60, 30.197) },\n        { price = 2500, coords = vec3(24.589, -946.056, 29.357) },\n        { price = 2500, coords = vec3(-254.112, -692.483, 33.616) },\n        { price = 2500, coords = vec3(-1570.197, -546.651, 34.955) },\n        { price = 2500, coords = vec3(-1415.909, -211.825, 46.500) },\n        { price = 2500, coords = vec3(-1430.112, -211.014, 46.500) },\n        { price = 2500, coords = vec3(33.232, -1347.849, 29.497) },\n        { price = 2500, coords = vec3(129.216, -1292.347, 29.269) },\n        { price = 2500, coords = vec3(287.645, -1282.646, 29.659) },\n        { price = 2500, coords = vec3(289.012, -1256.545, 29.440) },\n        { price = 2500, coords = vec3(295.839, -895.640, 29.217) },\n        { price = 2500, coords = vec3(1686.753, 4815.809, 42.008) },\n        { price = 2500, coords = vec3(-302.408, -829.945, 32.417) },\n        { price = 2500, coords = vec3(5.134, -919.949, 29.557) },\n        { price = 2500, coords = vec3(527.26, -160.76, 57.09) },\n        { price = 2500, coords = vec3(-867.19, -186.99, 37.84) },\n        { price = 2500, coords = vec3(-821.62, -1081.88, 11.13) },\n        { price = 2500, coords = vec3(-1315.32, -835.96, 16.96) },\n        { price = 2500, coords = vec3(-660.71, -854.06, 24.48) },\n        { price = 2500, coords = vec3(-1109.73, -1690.81, 4.37) },\n        { price = 2500, coords = vec3(-1091.5, 2708.66, 18.95) },\n        { price = 2500, coords = vec3(1171.98, 2702.55, 38.18) },\n        { price = 2500, coords = vec3(2683.09, 3286.53, 55.24) },\n        { price = 2500, coords = vec3(89.61, 2.37, 68.31) },\n        { price = 2500, coords = vec3(-30.3, -723.76, 44.23) },\n        { price = 2500, coords = vec3(-28.07, -724.61, 44.23) },\n        { price = 2500, coords = vec3(-613.24, -704.84, 31.24) },\n        { price = 2500, coords = vec3(-618.84, -707.9, 30.5) },\n        { price = 2500, coords = vec3(-1289.23, -226.77, 42.45) },\n        { price = 2500, coords = vec3(-1285.6, -224.28, 42.45) },\n        { price = 2500, coords = vec3(-1286.24, -213.39, 42.45) },\n        { price = 2500, coords = vec3(-1282.54, -210.45, 42.45) },\n        { price = 2500, coords = vec3(147.6513, -1035.8063, 29.3430) },\n        { price = 2500, coords = vec3(145.9408, -1035.1638, 29.3449) },\n    },\n}\nUtils = {}\nUtils.Notification = function(title, description, type, duration)\n    lib.notify({\n        title = title,\n        description = description,\n        type = type,\n        duration = duration or 5000\n    })\nend\nUtils = {}\nUtils.Notification = function(src, title, description, type, duration)\n    TriggerClientEvent('ox_lib:notify', src, {\n        title = title,\n        description = description,\n        type = type,\n        duration = duration\n    })\nend\nLocales['en'] = {\n    menu = {\n        banks = {\n            title = 'Banks Menu',\n            createbank = 'Create Bank',\n            deletebank = 'Delete Bank',\n            editbanks = 'Edit Banks',\n        }\n    },\n    context = {\n        atmmenuTitle = 'Accounts',\n        account = 'Account %s',\n        na = 'N/A',\n        personalTitle = 'Personal Accounts',\n        personalDesc = 'Current Balance: $%s\\nAccount Address: %s\\nThe next payment deadline is: %s\\nShare the account with: %s',\n        societyTitle = 'Society Accounts',\n        societyDesc = 'Current Balance: $%s\\nAccount Address: %s\\nThe next payment deadline is: %s\\nSociety Name: %s\\nShare the account with: %s',\n        depositMoneyTitle = 'Deposit Money',\n        depositMoneyDesc = 'Click to leave money in your account',\n        depositMoneyInBankDesc = 'Deposit money in your bank',\n        depositMoneyOnAccountDesc = 'Deposit money to the %s account',\n        withdrawMoneyTitle = 'Withdraw Money',\n        withdrawMoneyDesc = 'Click to withdraw money from your account',\n        withdrawMoneyFromBankDesc = 'Withdraw money from your bank',\n        bossmenuTitle = 'Boss Menu',\n        bankInfoTitle = 'Bank Info',\n        bankInfoDesc = 'Check your bank information',\n        changeNameTitle = 'Change Bank Name',\n        changeNamePriceDesc = 'Change the name of the bank for %s$',\n        moneySettingsTitle = 'Money Settings',\n        moneySettingsDesc = 'Manage you money from your bank',\n        manageAccountTitle = 'Manage Accounts',\n        manageAccountDesc = 'List of all accounts in your bank',\n        manageATMSTitle = 'Manage Atms',\n        manageATMSDesc = 'Buy or sell those ATMs',\n        manageAccountsTitle = 'Manage Accounts',\n        extendMaintenanceTitle = 'Extend account maintenance',\n        extendMaintenanceDesc = 'Extend account maintenance',\n        accountHistoryTitle = 'Account History',\n        accountHistoryDesc = 'Click to check account action history',\n        closeAccountTitle = 'Close Account',\n        closeAccountDesc = 'Terminate your account so it can no longer be used',\n        availableATMsTitle = 'Available ATMs',\n        availableATMsDesc = 'Click to buy this atm for %s$',\n        ownedATMTitle = 'Owned ATMs',\n        ATMTitle = 'ATM #%s',\n        ATMDesc = 'Click to sold this atm for %s$',\n        balanceTitle = 'Balance: %s$',\n        createNewAccountTitle = 'Create New Account',\n        bankMenuTitle = '%s Bank',\n        bankMenuDesc = 'Access to many options to help you to modify this bank',\n        transferMoneyTitle = 'Transfer Money',\n        transferMoneyDesc = 'Click to send money to another account',\n        accessSettingsTitle = 'Access Settings',\n        accessSettingsDesc = 'Click to change access to players on your account',\n        transferOwnershipTitle = 'Transfer Ownership',\n        transferOwnershipDesc = 'Click to change the owner of this account',\n        deleteAccountTitle = 'Delete Account',\n        deleteAccountDesc = 'Click to permanently delete this account',\n        copyAccountAddressTitle = 'Copy Account Address',\n        copyAccountAddressDesc = 'Click to copy your address',\n        playersListTitle = 'Players List',\n        noPlayersTitle = 'No Players',\n        playerAccessDesc = 'Click to change access or remove player',\n        changeAccessTitle = 'Change Access',\n        changeAccessDesc = 'Click to change player access',\n        removeAccessTitle = 'Remove Access',\n        removeAccessDesc = 'Click to remove player access',\n        addNewPlayerTitle = 'Add New Player',\n        banksListTitle = 'Banks List',\n        changeAccountSettingsTitle = 'Change Accounts Settings',\n        changeAccountSettingsDesc = 'Turn on/off Permission to create social accounts as well as enable free first account and account maintenance cost',\n        updateBankTaxTitle = 'Update Bank Tax',\n        updateBankTaxDesc = 'Change the bank tax that the bank receives during transactions',\n        updateAtmListTitle = 'Update ATM List',\n        updateAtmListDesc = 'Update the list of ATMs owned by this bank',\n        updateBalanceTitle = 'Update Balance',\n        updateBalanceDesc = 'Change the balance of this bank',\n        changePriceTitle = 'Change Price',\n        changePriceDesc = 'Change the buy price this bank',\n        changeBossMenuLocationTitle = 'Change Boss Location',\n        changeBossMenuLocationDesc = 'Change the location of the boss menu',\n        changeBankLocationTitle = 'Change Bank Location',\n        changeBankLocationDesc = 'Change the location of the bank',\n        enableBlipTitle = 'Enable Blip',\n        enableBlipDesc = 'Turn on the blip on the maps on this bank',\n        disableBlipTitle = 'Disable Blip',\n        disableBlipDesc = 'Turn off the map blip on this bank',\n        changeNameDesc = 'Change the current name of this bank',\n    },\n    dialog = {\n        buyBank = {\n            title = 'Want to buy?',\n            description = 'Are you sure you want to buy the bank %s for %s $'\n        },\n        bankInfo = {\n            title = 'Bank Info',\n            description = {\n                ('Bank Name: %s  \\n'),\n                ('Bank Balance: %s$  \\n'),\n                ('Owned Atms: %s  \\n\\n'),\n                ('Number of Personal Accounts: %s  \\n'),\n                ('Number of Society Accounts: %s  \\n\\n'),\n                ('Free Trail Account: %s  \\n'),\n                ('Society Accounts: %s  \\n'),\n                ('Account Maintenance: %s$  \\n'),\n                ('Tax: %s%%'),\n            }        \n        },\n        openAccount = {\n            title = 'Do you want to open account for %s'\n        },\n        closeAccount = {\n            title = 'Are you sure you want to close account %s? With that, the account owner will lose everything he had on the account'\n        },\n        deleteAccount = {\n            title = 'Are you sure you want to delete the account %s. Therefore, you will lose all money from your account if you delete it.'\n        },\n        buyAtm = {\n            title = 'Are you sure you want to buy ATM #%s for %s$',\n        },\n        sellAtm = {\n            title = 'Are you sure you want to sold ATM #%s for %s$',\n        },\n        removeAccess = {\n            title = 'Are you sure you want to remove account access for player %s',\n        },\n        confirmation = 'Confirmation',\n        yes = 'Yes',\n        no = 'No',\n        free = 'Free'\n    },\n    textUI = {\n        placeBankLocation = '[ENTER] - Place Bank Location  \\n[BACKSPACE] - Cancel',\n        placeBossLocation = '[ENTER] - Place Boss Menu Location  \\n[BACKSPACE] - Cancel',\n        openBank = '[E] - Open Bank Menu',\n        openATM = '[E] - Open ATM',\n        openBoss = '[E] - Open Boss Menu',\n    },\n    target = {\n        openBank = 'Open Bank',\n        openBoss = 'Open Boss Menu',\n        openAtm = 'Open ATM',\n    },\n    input = {\n        createbank = {\n            title = 'Create Bank',\n            bankname_title = 'Bank Name',\n            bankname_desc = 'Enter the name you want your bank to be called',\n            bankprice_title = 'Bank Price',\n            bankprice_desc = 'Enter the bank price at which people will buy',\n            selectowner_title = 'Select Owner',\n            selectowner_desc = 'Choose the player you want to give ownership of this bank',\n            selectbankatm_title = 'Select Atms',\n            selectbankatm_desc = 'Select the ATMs you want to give to this bank at the beginning.',\n            selectatm_options_title = 'Atm #%s',\n            banktax_title = 'Bank Tax',\n            banktax_desc = 'The fee that the bank will charge for each transaction',\n            startbalance_title = 'Start Balance',\n            startbalance_desc = 'The money the bank will receive at the beginning when you create it',\n            maintenance_title = 'Bank Account Maintenance',\n            maintenance_desc = 'The amount each player will pay when maintaining an account',\n            enablesocietyaccounts = 'Enable Society Accounts',\n            unlimitedmoney = 'Unlimited Money',\n            enablefreetrielaccount = 'Enable Free Triel Account',\n            enableblip = 'Enable Bank Blip',\n        },\n        createAccount = {\n            title = 'Create Account',\n            accountName = 'Account Name',\n            selectAccountType = 'Select Account Type',\n            playerAccess = 'Player Access',\n        },\n        blip = {\n            title = 'Blip Settings',\n            blipId = 'Blip ID',\n            blipScale = 'Blip Scale',\n            blipColor = 'Blip Color',\n        },\n        changeNameTitle = 'Change Bank Name',\n        enterNewNameTitle = 'Enter New Name',\n        enterAmount = 'Enter Amount',\n        depositMoney = 'Deposit Money on %s',\n        extendMaintenanceTitle = 'Extend account maintenance',\n        playerAccessTitle = '%s Access',\n        selectAccess = 'Select Access',\n        selectPlayer = 'Select Player',\n        enterIdentifier = 'Enter Identifier',\n        selectAction = 'Select Action',\n        transferOwnership = 'Transfer Ownership',\n        transferMoney = 'Transfer Money',\n        enterAddress = 'Enter Address',\n        addAccessTitle = 'Add Access',\n        players = 'Players',\n        deleteBankTitle = 'Delete Bank',\n        selectBank = 'Select Bank',\n        changeAccountSettingsTitle = 'Change Accounts Settings',\n        updateBankTaxTitle = 'Update Bank Tax',\n        updateAtmList = 'Update ATM List',\n        selectAtm = 'Select ATM',\n        selectNewOwner = 'Select New Owner',\n        changeBalanceTitle = 'Change Balance',\n        changePriceTitle = 'Change Price',\n    },\n    options = {\n        depositMoney = 'Deposit Money',\n        withdrawMoney = 'Withdraw Money',\n        transferMoney = 'Transfer Money',\n        accountHistory = 'Account History',\n        personal = 'Personal',\n        society = 'Society',\n        onlinePlayer = 'Online Player',\n        offlinePlayer = 'Offline Player',\n        noOwner = 'No Owner',\n    },\n    blip = {\n        available_atm = 'Available Atm'\n    },\n    notify = {\n        error = {\n            title = 'Error',\n            max_bank = 'You cannot buy a bank because you have a maximum number of banks which is %s',\n            need_openaccount = 'In order to use this ATM, you must first create an account',\n            invalid_address = 'You must enter a valid address',\n            same_address = 'You cannot send money to yourself',\n            max_account = 'You cannot create an account because you have the maximum number of accounts',\n            account_in_minus = 'You cannot create a new account because one of your accounts is in the minus',\n            no_money_account = 'You dont have enough money to create an account',\n            no_money_atm = 'You dont have enough money to buy ATM',\n        },\n        success = {\n            title = 'Success',\n            bank_created = 'You have successfully created a %s Bank',\n            account_created = 'You have successfully created a %s account in %s bank',\n            deposited_money = 'You have successfully deposited $%s into your bank account',\n            withdrawn_money = 'You have successfully withdrawn $%s from your bank account',\n            transfered_money = 'You have successfully transfered $%s on address',\n            added_access = 'You have successfully added a new player to the access list',\n            updated_access = 'You have successfully updated the players account access',\n            transfered_ownership = 'You have successfully transferred ownership to %s',\n            deleted_account = 'You have successfully deleted the %s account from %s bank',\n            deleted_bank = 'You have successfully deleted %s bank',\n            name_changed_price = 'You have successfully changed the name of the bank to %s for $%s',\n            name_changed = 'You have successfully changed the name of the bank to %s',\n            bought_atm = 'You have successfully purchased ATM #%s for $%s',\n            sold_atm = 'You have successfully sold ATM #%s for $%s',\n            deposited_money_account = 'You have successfully added $%s to your %s account',\n            extended_account_time = 'You have successfully extended the invoice payment deadline until %s',\n            closed_account = 'You have successfully closed your %s bank account',\n            purchased_bank = 'You have successfully purchased a %s Bank for $%s',\n            disabled_blip = 'You have successfully turned off the blip option',\n            enabled_blip = 'You have successfully turned on the blip option',\n            bank_location_changed = 'You have successfully changed your bank location',\n            boss_location_changed = 'You have successfully changed the boss menu location',\n            price_changed = 'You have successfully changed the price of the bank to $%s',\n            balance_changed = 'You have successfully changed your bank balance to $%s',\n            ownership_transfered = 'You have successfully changed the owner of the bank.',\n            atm_list_changed = 'You have successfully changed the list of ATMs',\n            tax_changed = 'You have successfully changed the taka to %s%',\n            account_settings_changed = 'You have successfully changed your account settings',\n        }\n    }\n}"}},"/paid/ownablebanks":{"title":"Advanced Ownable Banks","data":{"":"System that allows your players to test shooting skills against each other."}},"/paid/ownableshops":{"title":"Ownableshops","data":{}},"/paid/ownableshops/about":{"title":"About Asset","data":{}},"/paid/ownableshops/accessiable":{"title":"Accessible code","data":{}},"/paid/pedcreator":{"title":"Pedcreator","data":{}},"/paid/pilot":{"title":"Pilot","data":{}},"/paid/pedcreator/accessiable":{"title":"Accessible code","data":{}},"/paid/pilot/about":{"title":"About Asset","data":{}},"/paid/playermanager":{"title":"Playermanager","data":{}},"/paid/pilot/accessiable":{"title":"Accessible code","data":{}},"/paid/playermanager/accessiable":{"title":"Accessible code","data":{}},"/paid/playermanager/about":{"title":"About Asset","data":{}},"/paid/gasstations/accessiable":{"title":"Accessible code","data":{}},"/paid/policeimpound":{"title":"Policeimpound","data":{}},"/paid/pedcreator/about":{"title":"About Asset","data":{}},"/paid/policeimpound/about":{"title":"About Asset","data":{}},"/paid/policeimpound/accessiable":{"title":"Accessible code","data":{}},"/paid/postoffice":{"title":"Postoffice","data":{}},"/paid/postoffice/about":{"title":"About Asset","data":{}},"/paid/postoffice/accessiable":{"title":"Accessible code","data":{}},"/paid/privatecameras":{"title":"Privatecameras","data":{}},"/paid/privatecameras/about":{"title":"About Asset","data":{}},"/paid/privatecameras/accessiable":{"title":"Accessible code","data":{}},"/paid/promocodes":{"title":"Promocodes","data":{}},"/paid/promocodes/accessiable":{"title":"Accessible code","data":{}},"/paid/promocodes/about":{"title":"About Asset","data":{}},"/paid/racing":{"title":"Racing","data":{}},"/paid/racing/about":{"title":"About Asset","data":{}},"/paid/radar":{"title":"Radar","data":{}},"/paid/racing/accessiable":{"title":"Accessible code","data":{}},"/paid/radar/accessiable":{"title":"Accessible code","data":{}},"/paid/radar/about":{"title":"About Asset","data":{}},"/paid/registration":{"title":"Registration","data":{}},"/paid/registration/about":{"title":"About Asset","data":{}},"/paid/rentcreator":{"title":"Rentcreator","data":{}},"/paid/registration/accessiable":{"title":"Accessible code","data":{}},"/paid/rentcreator/about":{"title":"About Asset","data":{}},"/paid/rentcreator/accessiable":{"title":"Accessible code","data":{}},"/paid/reports":{"title":"Reports","data":{}},"/paid/reports/about":{"title":"About Asset","data":{}},"/paid/reports/accessiable":{"title":"Accessible code","data":{}},"/paid/safezones":{"title":"Safezones","data":{}},"/paid/safezones/about":{"title":"About Asset","data":{}},"/paid/safezones/accessiable":{"title":"Accessible code","data":{}},"/paid/solarpanels":{"title":"Solarpanels","data":{}},"/paid/solarpanels/about":{"title":"About Asset","data":{}},"/paid/solarpanels/accessiable":{"title":"Accessible code","data":{}},"/paid/spawnselector":{"title":"Spawnselector","data":{}},"/paid/spawnselector/about":{"title":"About Asset","data":{}},"/paid/stock":{"title":"Stock","data":{}},"/paid/stock/about":{"title":"About Asset","data":{}},"/paid/stock/accessiable":{"title":"Accessible code","data":{}},"/paid/spawnselector/accessiable":{"title":"Accessible code","data":{}},"/paid/taxi":{"title":"Taxi","data":{}},"/paid/taxi/accessiable":{"title":"Accessible code","data":{}},"/paid/taxi/about":{"title":"About Asset","data":{}},"/paid/turfwars":{"title":"Turfwars","data":{}},"/paid/turfwars/accessiable":{"title":"Accessible code","data":{}},"/paid/turfwars/about":{"title":"About Asset","data":{}},"/paid/weather":{"title":"Weather","data":{}},"/paid/weather/accessiable":{"title":"Accessible code","data":{}},"/paid/weather/about":{"title":"About Asset","data":{}},"/paid/weed/accessiable":{"title":"Accessible code","data":{}},"/paid/weed":{"title":"Weed","data":{}},"/paid/weed/about":{"title":"About Asset","data":{}},"/escrow":{"title":"FiveM asset escrow errors","data":{"you-lack-the-required-entitlement-to-use-x#You lack the required entitlement to use X":"Make sure that your server's license key is owned by the same keymaster account that owns the asset. If it is on the same account, restart your server. If not, transfer the asset to the same account as your server's license key. Please note that you can only transfer assets once.","failed-to-verify-protected-resource-x#Failed to verify protected resource X":"This error means that files were corrupted during the download. Most times this happens because you use FileZilla, which doesn't work well with encrypted files. Try using WinSCP instead.","error-parsing-script-y-in-resource-x-y-syntax-error-near-1#Error parsing script @Y in resource X: @Y: syntax error near <\\1>":"This error means that your server artifacts are outdated. Update to the latest recommended version."}},"/paid/ads/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/attendance/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/billing/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/cartheft/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/crypto/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/darknet/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/dispatch/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/electrician/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/elevator/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/farming/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/gang/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/garage/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/hud/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/jobcreator/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/marketplace/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/gasstations/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/mechanic/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/ownableshops/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/pedcreator/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/pilot/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/policeimpound/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/postoffice/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/privatecameras/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/promocodes/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/racing/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/radar/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/registration/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/rentcreator/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/reports/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/safezones/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/solarpanels/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/spawnselector/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/stock/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/taxi/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/turfwars/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/weather/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/weed/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/cocainelabs/install":{"title":"Installation","data":{"":"Installation guide for Ownable Cocaine Labs","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\nCREATE TABLE `uniq-labs` (\n    `id` INT(11) NOT NULL AUTO_INCREMENT,\n    `name` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb3_general_ci',\n    `data` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb3_general_ci',\n    PRIMARY KEY (`id`) USING BTREE\n) COLLATE='utf8mb3_general_ci' ENGINE=InnoDB;","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/deathmatch/install":{"title":"Installation","data":{"":"Installation guide for Deathmatch System","install-dependecies#Install Dependecies":"ox_lib\nup-to-date server artifacts","modify-ambulance-job--inventory#Modify Ambulance job & Inventory":"","find-function#Find function":"In the esx_ambulancejob/client/main.lua file, press CTRL + F to search for: function OnPlayerDeath()","modify-code#Modify Code":"function OnPlayerDeath()\n    if LocalPlayer.state.inDeathmatch == true then return end\n    isDead = true\n    ESX.CloseContext()\n    ClearTimecycleModifier()\n    SetTimecycleModifier(\"REDMIST_blend\")\n    SetTimecycleModifierStrength(0.7)\n    SetExtraTimecycleModifier(\"fp_vig_red\")\n    SetExtraTimecycleModifierStrength(1.0)\n    SetPedMotionBlur(PlayerPedId(), true)\n    TriggerServerEvent('esx_ambulancejob:setDeathStatus', true)\n    StartDeathTimer()\n    StartDeathCam()\n    StartDistressSignal()\nend","find-function-1#Find function":"In the qb-ambulancejob/client/death.lua file, press CTRL + F to search for: AddEventHandler('gameEventTriggered', function(event, data)","modify-code-1#Modify Code":"AddEventHandler('gameEventTriggered', function(event, data)\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if event == \"CEventNetworkEntityDamage\" then\n        local victim, attacker, victimDied, weapon = data[1], data[2], data[4], data[7]\n        if not IsEntityAPed(victim) then return end\n        if victimDied and NetworkGetPlayerIndexFromPed(victim) == PlayerId() and IsEntityDead(PlayerPedId()) then\n            if not InLaststand then\n                SetLaststand(true)\n            elseif InLaststand and not isDead then\n                SetLaststand(false)\n                local playerid = NetworkGetPlayerIndexFromPed(victim)\n                local playerName = GetPlayerName(playerid) .. \" \" .. \"(\"..GetPlayerServerId(playerid)..\")\" or Lang:t('info.self_death')\n                local killerId = NetworkGetPlayerIndexFromPed(attacker)\n                local killerName = GetPlayerName(killerId) .. \" \" .. \"(\"..GetPlayerServerId(killerId)..\")\" or Lang:t('info.self_death')\n                local weaponLabel = (QBCore.Shared.Weapons and QBCore.Shared.Weapons[weapon] and QBCore.Shared.Weapons[weapon].label) or 'Unknown'\n                local weaponName = (QBCore.Shared.Weapons and QBCore.Shared.Weapons[weapon] and QBCore.Shared.Weapons[weapon].name) or 'Unknown'\n                TriggerServerEvent(\"qb-log:server:CreateLog\", \"death\", Lang:t('logs.death_log_title', {playername = playerName, playerid = GetPlayerServerId(playerid)}), \"red\", Lang:t('logs.death_log_message', {killername = killerName, playername = playerName, weaponlabel = weaponLabel, weaponname = weaponName}))\n                deathTime = Config.DeathTime\n                OnDeath()\n                DeathTimer()\n            end\n        end\n    end\nend)","find-thread#Find Thread":"In the qb-ambulancejob/client/main.lua file, press CTRL + F to search for: local hit, bone = GetPedLastDamageBone(ped)","modify-code-2#Modify Code":"Replace that whole thread with this:\nCreateThread(function()\n    while true do\n        if not LocalPlayer.state.inDeathmatch or LocalPlayer.state.inDeathmatch == false then\n            local ped = PlayerPedId()\n            local health = GetEntityHealth(ped)\n            local armor = GetPedArmour(ped)\n            if not playerHealth then\n                playerHealth = health\n            end\n            if not playerArmor then\n                playerArmor = armor\n            end\n            local armorDamaged = (playerArmor ~= armor and armor < (playerArmor - Config.ArmorDamage) and armor > 0) -- Players armor was damaged\n            local healthDamaged = (playerHealth ~= health) -- Players health was damaged\n            local damageDone = (playerHealth - health)\n            if armorDamaged or healthDamaged then\n                local hit, bone = GetPedLastDamageBone(ped)\n                local bodypart = Config.Bones[bone]\n                local weapon = GetDamagingWeapon(ped)\n                if hit and bodypart ~= 'NONE' then\n                    local checkDamage = true\n                    if damageDone >= Config.HealthDamage then\n                        if weapon then\n                            if armorDamaged and (bodypart == 'SPINE' or bodypart == 'UPPER_BODY') or weapon == Config.WeaponClasses['NOTHING'] then\n                                checkDamage = false -- Don't check damage if the it was a body shot and the weapon class isn't that strong\n                                if armorDamaged then\n                                    TriggerServerEvent(\"hospital:server:SetArmor\", GetPedArmour(ped))\n                                end\n                            end\n                            if checkDamage then\n                                if IsDamagingEvent(damageDone, weapon) then\n                                    CheckDamage(ped, bone, weapon, damageDone)\n                                end\n                            end\n                        end\n                    elseif Config.AlwaysBleedChanceWeapons[weapon] then\n                        if armorDamaged and (bodypart == 'SPINE' or bodypart == 'UPPER_BODY') or weapon == Config.WeaponClasses['NOTHING'] then\n                            checkDamage = false -- Don't check damage if the it was a body shot and the weapon class isn't that strong\n                        end\n                        if math.random(100) < Config.AlwaysBleedChance and checkDamage then\n                            ApplyBleed(1)\n                        end\n                    end\n                end\n                CheckWeaponDamage(ped)\n            end\n            playerHealth = health\n            playerArmor = armor\n            if not isInHospitalBed then\n                ProcessDamage(ped)\n            end\n        end\n        Wait(100)\n    end\nend)","find-event#Find Event":"In the wasabi_ambulance/game/client/client.lua file, press CTRL + F to search for: AddEventHandler('wasabi_bridge:onPlayerDeath', function(data)","modify-code-3#Modify Code":"AddEventHandler('wasabi_bridge:onPlayerDeath', function(data)\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if OccupyingStretcher then\n        local occupyingStretcher = OccupyingStretcher\n        OccupyingStretcher = nil\n        CreateThread(function()\n            local stretcherID = GetActiveStretcherIDFromEntity(occupyingStretcher)\n            local serverID = GetPlayerServerId(PlayerId())\n            if stretcherID and serverID then\n                Wait(100)\n                TriggerServerEvent('wasabi_ambulance:placePlayerOnStretcher', stretcherID, serverID)\n            end\n        end)\n    end\n    if not isDead then originalDeath = data.deathCause end\n    if isDead == 'laststand' and originalDeath then\n        data.deathCause = originalDeath\n        originalDeath = nil\n    end\n    if data.deathCause == 0 then\n        local deathSource = wsb.getClosestPlayer(vec3(data.victimCoords.x, data.victimCoords.y, data.victimCoords.z), 3.0)\n        if deathSource then\n            local deathSourcePed = GetPlayerPed(deathSource)\n            local weapon = GetSelectedPedWeapon(deathSourcePed)\n            for k, v in pairs(InjuryReasons) do\n                for i = 1, #v do\n                    if v[i] == weapon then\n                        deathInjury = tostring(k)\n                        break\n                    end\n                end\n            end\n            if deathInjury == 'shot' then deathInjury = 'beat' end\n        end\n    elseif data.deathCause == -842959696 then\n        deathInjury = 'bleedout'\n    else\n        for k, v in pairs(InjuryReasons) do\n            for i = 1, #v do\n                if v[i] == data.deathCause then\n                    deathInjury = tostring(k)\n                    break\n                end\n            end\n        end\n    end\n    PlayerInjury = {}\n    if Config.DeathLogs then\n        local killer = GetPedSourceOfDeath(cache.ped)\n        local dCause = GetPedCauseOfDeath(cache.ped)\n        local deathCause\n        if IsEntityAPed(killer) and IsPedAPlayer(killer) then\n            killer = NetworkGetPlayerIndexFromPed(killer)\n        elseif IsEntityAVehicle(killer) and IsEntityAPed(GetPedInVehicleSeat(killer, -1)) and IsPedAPlayer(GetPedInVehicleSeat(killer, -1)) then\n            killer = NetworkGetPlayerIndexFromPed(GetPedInVehicleSeat(dCause, -1))\n        end\n        if (killer == PlayerId()) then\n            deathCause = 'suicide'\n        elseif (killer == nil or killer == 0) then\n            deathCause = 'unknown'\n        end\n        if deathCause == 'suicide' or deathCause == 'unknown' then\n            TriggerServerEvent('wasabi_ambulance:logDeath', dCause, nil)\n        elseif killer then\n            TriggerServerEvent('wasabi_ambulance:logDeath', dCause, GetPlayerServerId(killer))\n        end\n    end\n    if Config.MythicHospital then\n        TriggerEvent('mythic_hospital:client:RemoveBleed')\n        TriggerEvent('mythic_hospital:client:ResetLimbs')\n    end\n    TriggerServerEvent('wasabi_ambulance:injurySync', deathInjury)\n    if not Config.LastStand or IsPedInAnyVehicle(cache.ped, false) then\n        OnPlayerDeath(false)\n        return\n    end\n    OnLastStand()\nend)","find-event-1#Find Event":"In the wasabi_ambulance/game/client/client.lua file, press CTRL + F to search for: AddEventHandler('gameEventTriggered', function(event, data)","modify-code-4#Modify Code":"AddEventHandler('gameEventTriggered', function(event, data)\n        if LocalPlayer.state.inDeathmatch == true then return end\n        if event == \"CEventNetworkEntityDamage\" then\n            local victim = data[1]\n            local playerId = NetworkGetPlayerIndexFromPed(victim)\n            if playerId ~= PlayerId() then return end\n            if (IsPedDeadOrDying(victim, true) or IsPedFatallyInjured(victim)) then return end\n            local health = GetEntityHealth(cache.ped)\n            local armour = GetPedArmour(cache.ped)\n            if not previousHealth then previousHealth = health end\n            if not previousArmour then previousArmour = armour end\n            local healthDamage = (previousHealth - health)\n            local armourDamage = (previousArmour - armour)\n            if healthDamage > (Config?.DamageDetectThreshold?.health or 10) then\n                ChanceInjury()\n            elseif armourDamage > (Config?.DamageDetectThreshold?.armour or 5) then\n                ChanceInjury()\n            end\n        end\n    end)","find-function-2#Find function":"In the qbx_medical/client/death.lua file, press CTRL + F to search for: AddEventHandler('gameEventTriggered', function(event, data)","modify-code-5#Modify Code":"AddEventHandler('gameEventTriggered', function(event, data)\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if event ~= 'CEventNetworkEntityDamage' then return end\n    local victim, attacker, victimDied, weapon = data[1], data[2], data[4], data[7]\n    if not IsEntityAPed(victim) or not victimDied or NetworkGetPlayerIndexFromPed(victim) ~= cache.playerId or not IsEntityDead(cache.ped) then return end\n    if DeathState == sharedConfig.deathState.ALIVE then\n        Wait(1000)\n        StartLastStand(attacker, weapon)\n    elseif DeathState == sharedConfig.deathState.LAST_STAND then\n        EndLastStand()\n        logDeath(victim, attacker, weapon)\n        DeathTime = config.deathTime\n        OnDeath(attacker, weapon)\n    end\nend)","find-code#Find code":"In the qbx_medical/client/wounding.lua file, press CTRL + F to search for: local level = getWorstInjury()","replce-whole-thread#Replce whole thread":"local wait = 1000\nCreateThread(function()\n    while true do\n        if not LocalPlayer.state.inDeathmatch then\n            if NumInjuries > 0 then\n                local level = getWorstInjury()\n                SetPedMoveRateOverride(cache.ped, sharedConfig.woundLevels[level].movementRate)\n                wait = 5\n            else\n                wait = 1000\n            end\n        end\n        Wait(wait)\n    end\nend)","find-code-1#Find code":"In the qbx_medical/client/wounding.lua file, press CTRL + F to search for: if enableBleeding then","replce-whole-thread-1#Replce whole thread":"CreateThread(function()\n    Wait(2500)\n    while true do\n        Wait(1000)\n        if not LocalPlayer.state.inDeathmatch then\n            if enableBleeding then\n                checkBleeding()\n            end\n        end\n    end\nend)","find-code-2#Find code":"In the qbx_medical/client/damage.lua file, press CTRL + F to search for: if damageEffectsEnabled then","replce-whole-thread-2#Replce whole thread":"CreateThread(function()\n    while true do\n        if not LocalPlayer.state.inDeathmatch then\n            checkForDamage()\n            if damageEffectsEnabled then\n                ApplyDamageEffects()\n            end\n        end\n        Wait(100)\n    end\nend)","find-code-3#Find code":"In the codem-inventory/editable/editableclient.lua file, press CTRL + F to search for: function UseSlot(slotnumber)","replace-code#Replace code":"function UseSlot(slotnumber)\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if not CanAccesInventory() then\n        return\n    end\n    slotnumber = tostring(slotnumber)\n    if ClientInventory[slotnumber] then\n        TriggerServerEvent('codem-inventory:server:UseItem', slotnumber, ClientInventory[slotnumber].name)\n    end\nend","find-code-4#Find code":"In the codem-inventory/editable/editableclient.lua file, press CTRL + F to search for: RegisterNetEvent('codem-inventory:openInventory', function()","replce-code#Replce code":"RegisterNetEvent('codem-inventory:openInventory', function()\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if not nuiLoaded and Core == nil then\n        return\n    end\n    if not CanAccesInventory() then\n        return\n    end\n    if jobData.name == nil or jobData.playerid == nil then\n        local namedata = TriggerCallback('codem-inventory:GetPlayerNameandid')\n        if namedata then\n            jobData.playername = namedata.name or 'UNKOWN'\n            jobData.playerid = namedata.id or 'UNKOWN'\n        end\n    end\n    OpenInventory = true\n    if Config.AnimPlayer['openinventory'] then\n        openAnim()\n    end\n    ToggleHotbar(false)\n    NuiMessage('LOAD_INVENTORY', ClientInventory)\n    NuiMessage('PLAYERNAME_ID', jobData)\n    SetNuiFocus(true, true)\n    CheckVehicleInventory()\n    if currentDrop then\n        NuiMessage('UPDATE_GROUND', ClientGround[currentDrop])\n    end\n    if not PedScreen then\n        Remove2d()\n    else\n        CreatePedScreen()\n    end\n    if Config.DurabilitySystem then\n        TriggerServerEvent('codem-inventory:checkdurabilityItems')\n    end\n    if Config.ItemClothingSystem then\n        TriggerEvent('codem-inventory:loadClothingInventory')\n    end\nend)","find-code-5#Find code":"In the core_inventory/client/main.lua file, press CTRL + F to search for: RegisterCommand('slot' .. i, function()","replace-code-1#Replace code":"for i = 3, 9 do\n    RegisterCommand('slot' .. i, function()\n        if LocalPlayer.state.inDeathmatch == true then return end\n        if not IsPauseMenuActive() and not inventoryOpened and not IsNuiFocused() then\n            for k, v in pairs(Keybinds) do\n                if tostring(k) == tostring(i) then\n                    TriggerServerEvent('core_inventory:server:useItem', v.item, v.exact)\n                end\n            end\n        end\n    end)\n    RegisterKeyMapping('slot' .. i, 'Uses the item in slot ' .. i, 'keyboard', i)\nend","find-code-6#Find code":"In the core_inventory/client/main.lua file, press CTRL + F to search for: function useWeapon(weapon, inventory)","replace-code-2#Replace code":"function useWeapon(weapon, inventory)\n    if LocalPlayer.state.inDeathmatch == true then return end\n    local ped = PlayerPedId()\n    local weaponName = tostring(weapon.name)\n    if weapon.metadata.durability then\n        if weapon.metadata.durability <= 0 then\n            Citizen.Trace('WEAPON IS BROKEN!')\n            return\n        end\n    end\n    if currentWeapon then\n        Holders[currentWeaponInventory].metadata.ammo = GetAmmoInPedWeapon(ped, currentWeapon)\n        TriggerServerEvent('core_inventory:server:updateAmmo', currentWeaponData.id, currentWeaponInventory,\n            GetAmmoInPedWeapon(ped, currentWeapon))\n    end\n    if currentWeapon == weaponName then\n        SetCurrentPedWeapon(ped, 'WEAPON_UNARMED', true)\n        RemoveAllPedWeapons(ped, true)\n        currentWeapon = nil\n        currentWeaponData = nil\n        currentWeaponInventory = nil\n        SendNUIMessage({\n            type = 'weaponUI',\n            data = weapon,\n            show = false,\n            ammo = 0,\n            maxammo = 0\n        })\n    elseif weaponName == \"weapon_stickybomb\" or weaponName == \"weapon_pipebomb\" or weaponName == \"weapon_smokegrenade\" or\n        weaponName == \"weapon_flare\" or weaponName == \"weapon_proxmine\" or weaponName == \"weapon_ball\" or weaponName ==\n        \"weapon_molotov\" or weaponName == \"weapon_grenade\" or weaponName == \"weapon_bzgas\" then\n        GiveWeaponToPed(ped, GetHashKey(weaponName), 1, false, false)\n        SetPedAmmo(ped, GetHashKey(weaponName), 1)\n        SetCurrentPedWeapon(ped, GetHashKey(weaponName), true)\n        currentWeapon = weaponName\n        currentWeaponData = weapon\n        currentWeaponInventory = inventory\n        Citizen.CreateThread(function()\n            while true do\n                if IsPedShooting(ped) then\n                    currentWeapon = nil\n                    currentWeaponData = nil\n                    currentWeaponInventory = nil\n                    Holders[inventory] = nil\n                    TriggerServerEvent('core_inventory:server:removeThrowable', inventory)\n                    SendNUIMessage({\n                        type = \"weaponUI\",\n                        data = weapon,\n                        show = false,\n                        ammo = 0,\n                        maxammo = 0\n                    })\n                    break\n                end\n                Citizen.Wait(1)\n            end\n        end)\n    else\n        local ammo = weapon.metadata.ammo or 0\n        if weaponName == \"weapon_petrolcan\" or weaponName == \"weapon_fireextinguisher\" then\n            ammo = 4000\n        end\n        GiveWeaponToPed(ped, GetHashKey(weaponName), 0, false, false)\n        SetPedAmmo(ped, GetHashKey(weaponName), ammo)\n        SetCurrentPedWeapon(ped, GetHashKey(weaponName), true)\n        SendNUIMessage({\n            type = 'weaponUI',\n            data = weapon,\n            show = false,\n            ammo = 0,\n            maxammo = 0\n        })\n        Citizen.Wait(100)\n        SendNUIMessage({\n            type = 'weaponUI',\n            data = weapon,\n            show = true,\n            ammo = ammo,\n            maxammo = 100\n        })\n        for k, v in pairs(weapon.metadata.attachments) do\n            if v then\n                if v.componentHash then\n                    GiveWeaponComponentToPed(ped, GetHashKey(weaponName), GetHashKey(v.componentHash))\n                elseif v.componentTint then\n                    SetPedWeaponTintIndex(ped, GetHashKey(weaponName), v.componentTint)\n                end\n            end\n        end\n        currentWeapon = weaponName\n        currentWeaponInventory = inventory\n        currentWeaponData = weapon\n        print(json.encode(currentWeaponData, {indent = true}))\n    end\nend","find-code-7#Find code":"In the core_inventory/client/main.lua file, press CTRL + F to search for: function openInventory()","replace-code-3#Replace code":"function openInventory()\n    if LocalPlayer.state.inDeathmatch == true then return end\n    if inventoryOpened then\n        return\n    end\n    inventoryOpened = true\n    TriggerServerEvent('core_inventory:server:openPersonalInventory')\n    SendNUIMessage({\n        type = 'openBase',\n        config = Config,\n        cid = cid,\n        settings = Settings,\n        admin = Admin,\n        qbitems = Items\n    })\n    local coords = GetEntityCoords(PlayerPedId())\n    for k, v in pairs(Drops) do\n        if #(v.coords - coords) < 2.0 then\n            TriggerServerEvent('core_inventory:server:openDrop', k)\n        end\n    end\n    for k, v in pairs(Config.Storage) do\n        if #(v.coords - coords) < 2.0 then\n            if v.jobs then\n                for _, g in ipairs(v.jobs) do\n                    if g == job then\n                        if v.personal then\n                            TriggerServerEvent('core_inventory:server:openInventory', k .. '-' .. cid, v.inventory)\n                            break\n                        else\n                            TriggerServerEvent('core_inventory:server:openInventory', k, v.inventory)\n                            break\n                        end\n                    end\n                end\n            else\n                if v.personal then\n                    TriggerServerEvent('core_inventory:server:openInventory', k .. '-' .. cid, v.inventory)\n                else\n                    TriggerServerEvent('core_inventory:server:openInventory', k, v.inventory)\n                end\n            end\n        end\n    end\n    for k, v in pairs(ExternalInventories) do\n        if #(v.coords - coords) < 2.0 then\n            TriggerServerEvent('core_inventory:server:openInventory', k, v.type)\n            break\n        end\n    end\n    handleTrunk(true)\n    zoomPlayer(true)\n    SetNuiFocus(true, true)\nend","installing-asset#Installing Asset":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/evidence/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\nCREATE TABLE IF NOT EXISTS `uniq_evidence` (\n  `caseId` varchar(50) DEFAULT NULL,\n  `type` varchar(50) DEFAULT NULL,\n  `data` longtext DEFAULT NULL,\n  `time` timestamp NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","adding-items#Adding Items":"In ox_inventory/data/items.lua add following:\n['empty_evidence_bag'] = {\n    label = 'Empty Evidence Bag',\n    stack = true,\n    close = false,\n    weight = 50\n},\n['bullet_shell_evidence'] = {\n    label = 'Bullet Shell Evidence',\n    stack = false,\n    close = false,\n    weight = 50\n},\n['bullet_evidence'] = {\n    label = 'Bullet Evidence',\n    stack = false,\n    close = false,\n    weight = 50\n},\n['blood_evidence'] = {\n    label = 'Blood Evidence',\n    stack = false,\n    close = false,\n    weight = 50\n},\n['uv_flashlight'] = {\n    label = 'UV Flashlight',\n    stack = false,\n    close = true,\n    weight = 850\n},\n['vehicle_prints_evidence'] = {\n    label = 'Vehicle Fingerprints Evidnece',\n    stack = false,\n    close = false,\n    weight = 50\n},\n['tweezers'] = {\n    label = 'Tweezers',\n    stack = true,\n    close = true,\n    weight = 15\n},\n['cleaning_kit'] = {\n  label = 'Cleaning Kit',\n  stack = true,\n  close = true,\n  weight = 450\n},\n['cleaning_shells'] = {\n  label = 'Cleaning Kit',\n  stack = true,\n  close = true,\n  weight = 450\n},\nExecute following SQL:\nINSERT INTO `items` (`name`, `label`, `weight`, `rare`, `can_remove`, `x`, `y`, `category`, `componentTint`, `componentHash`, `backpackModel`, `backgroundTexture`, `description`) VALUES\n  ('empty_evidence_bag', 'Empty Evidence Bag', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('bullet_shell_evidence', 'Bullet Shell Evidence', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('bullet_evidence', 'Bullet Evidence', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('blood_evidence', 'Blood Evidence', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('uv_flashlight', 'UV Flashlight', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('tweezers', 'Tweezers', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('vehicle_prints_evidence', 'Vehicle Fingerprints Evidnece', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('cleaning_kit', 'Cleaning Kit', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, ''),\n  ('cleaning_shells', 'Cleaning Kit', 1, 0, 1, 1, 1, 'misc', NULL, NULL, NULL, NULL, '');\nIn qb-core/shared/items.lua add following:\nempty_evidence_bag           = { name = 'empty_evidence_bag', label = 'Empty Evidence Bag', weight = 0, type = 'item', image = 'empty_evidence_bag.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nbullet_shell_evidence        = { name = 'bullet_shell_evidence', label = 'Bullet Shell Evidence', weight = 0, type = 'item', image = 'bullet_shell_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nbullet_evidence              = { name = 'bullet_evidence', label = 'Bullet Evidence', weight = 0, type = 'item', image = 'bullet_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nblood_evidence               = { name = 'blood_evidence', label = 'Blood Evidence', weight = 0, type = 'item', image = 'blood_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nuv_flashlight                = { name = 'uv_flashlight', label = 'UV Flashlight', weight = 0, type = 'item', image = 'uv_flashlight.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\ntweezers                     = { name = 'tweezers', label = 'Tweezers', weight = 0, type = 'item', image = 'tweezers.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\nvehicle_prints_evidence      = { name = 'vehicle_prints_evidence', label = 'Vehicle Fingerprints Evidnece', weight = 0, type = 'item', image = 'vehicle_prints_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\ncleaning_kit                 = { name = 'cleaning_kit', label = 'Cleaning Kit', weight = 450, type = 'item', image = 'cleaning_kit.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\ncleaning_shells              = { name = 'cleaning_shells', label = 'Cleaning Kit', weight = 450, type = 'item', image = 'cleaning_shells.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\nIn qs-inventory/shared/items.lua add following:\n['empty_evidence_bag']           = {\n  ['name'] = 'empty_evidence_bag',\n  ['label'] = 'Empty Evidence Bag',\n  ['weight'] = 0,\n  ['type'] = 'item',\n  ['image'] = 'empty_evidence_bag.png',\n  ['unique'] = false,\n  ['useable'] = false,\n  ['shouldClose'] = false,\n  ['combinable'] = nil,\n  ['description'] = 'Used a lot to keep DNA from blood, bullet shells and more'\n},\n['bullet_shell_evidence']           = {\n    ['name'] = 'bullet_shell_evidence',\n    ['label'] = 'Bullet Shell Evidence',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'bullet_shell_evidence.png',\n    ['unique'] = false,\n    ['useable'] = true,\n    ['shouldClose'] = false,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['bullet_evidence']           = {\n    ['name'] = 'bullet_evidence',\n    ['label'] = 'Bullet Evidence',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'bullet_evidence.png',\n    ['unique'] = true,\n    ['useable'] = false,\n    ['shouldClose'] = false,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['blood_evidence']           = {\n    ['name'] = 'blood_evidence',\n    ['label'] = 'Blood Evidence',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'blood_evidence.png',\n    ['unique'] = true,\n    ['useable'] = false,\n    ['shouldClose'] = false,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['uv_flashlight']           = {\n    ['name'] = 'uv_flashlight',\n    ['label'] = 'UV Flashlight',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'uv_flashlight.png',\n    ['unique'] = false,\n    ['useable'] = true,\n    ['shouldClose'] = true,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['tweezers']           = {\n    ['name'] = 'tweezers',\n    ['label'] = 'Tweezers',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'tweezers.png',\n    ['unique'] = false,\n    ['useable'] = true,\n    ['shouldClose'] = true,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['vehicle_prints_evidence']           = {\n    ['name'] = 'vehicle_prints_evidence',\n    ['label'] = 'Vehicle Fingerprints Evidnece',\n    ['weight'] = 0,\n    ['type'] = 'item',\n    ['image'] = 'vehicle_prints_evidence.png',\n    ['unique'] = true,\n    ['useable'] = false,\n    ['shouldClose'] = false,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['cleaning_kit']           = {\n    ['name'] = 'cleaning_kit',\n    ['label'] = 'Cleaning Kit',\n    ['weight'] = 450,\n    ['type'] = 'item',\n    ['image'] = 'cleaning_kit.png',\n    ['unique'] = false,\n    ['useable'] = true,\n    ['shouldClose'] = true,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\n['cleaning_shells']           = {\n    ['name'] = 'cleaning_shells',\n    ['label'] = 'Cleaning Kit',\n    ['weight'] = 450,\n    ['type'] = 'item',\n    ['image'] = 'cleaning_shells.png',\n    ['unique'] = false,\n    ['useable'] = true,\n    ['shouldClose'] = true,\n    ['combinable'] = nil,\n    ['description'] = ''\n},\nIn codem-inventory/config/itemlist.lua add following:\nempty_evidence_bag           = { name = 'empty_evidence_bag', label = 'Empty Evidence Bag', weight = 0, type = 'item', image = 'empty_evidence_bag.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nbullet_shell_evidence        = { name = 'bullet_shell_evidence', label = 'Bullet Shell Evidence', weight = 0, type = 'item', image = 'bullet_shell_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nbullet_evidence              = { name = 'bullet_evidence', label = 'Bullet Evidence', weight = 0, type = 'item', image = 'bullet_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nblood_evidence               = { name = 'blood_evidence', label = 'Blood Evidence', weight = 0, type = 'item', image = 'blood_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\nuv_flashlight                = { name = 'uv_flashlight', label = 'UV Flashlight', weight = 0, type = 'item', image = 'uv_flashlight.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\ntweezers                     = { name = 'tweezers', label = 'Tweezers', weight = 0, type = 'item', image = 'tweezers.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\nvehicle_prints_evidence      = { name = 'vehicle_prints_evidence', label = 'Vehicle Fingerprints Evidnece', weight = 0, type = 'item', image = 'vehicle_prints_evidence.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = '' },\ncleaning_kit                 = { name = 'cleaning_kit', label = 'Cleaning Kit', weight = 450, type = 'item', image = 'cleaning_kit.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },\ncleaning_shells              = { name = 'cleaning_shells', label = 'Cleaning Kit', weight = 450, type = 'item', image = 'cleaning_shells.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = '' },","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/playermanager/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\n  ovdje sql","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/objectcreator/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\nCREATE TABLE `uniq-objects` (\n    `id` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb3_general_ci',\n    `data` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb3_general_ci'\n) COLLATE='utf8mb3_general_ci' ENGINE=InnoDB;","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_lib\nox_target\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}},"/paid/ownablebanks/install":{"title":"Installation","data":{"":"Installation guide for Object Creator","install-mariadb#Install MariaDB":"Do not use XAMPP\nInstall the latest stable version of MariaDB, if you don't have it already.","sql-file#SQL file":"Do not use phpMyAdmin\nThe SQL code should install automatically. However, if it doesn't, you can manually run the following code using HeidiSQL.\nCREATE TABLE `uniq-banks` (\n    `id` INT(11) NOT NULL AUTO_INCREMENT,\n    `data` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb4_general_ci',\n    INDEX `Index 1` (`id`) USING BTREE\n) COLLATE='utf8mb4_general_ci' ENGINE=InnoDB AUTO_INCREMENT=1;\nCREATE TABLE `uniq-bankaccounts` (\n    `id` INT(11) NOT NULL AUTO_INCREMENT,\n    `accountinfo` LONGTEXT NULL DEFAULT NULL COLLATE 'utf8mb3_general_ci',\n    INDEX `Index 1` (`id`) USING BTREE\n) COLLATE='utf8mb3_general_ci' ENGINE=InnoDB AUTO_INCREMENT=1;","install-dependecies#Install Dependecies":"Download and install the following dependencies:\noxmysql\nox_target or qb-target or qtarget\nox_lib\nup-to-date server artifacts\nDownload dependencies and add them to your resources folder.","add-to-servercfg#Add to server.cfg":"Find your resources folder, inside create a new folder named [uniq] if one doesn’t already exist, move the asset from Keymaster into [uniq], and add ensure [uniq] at the end of your server.cfg file. Make sure that all dependencies listed above are started before our asset."}}}